<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0044)http://www.cse.ogi.edu/~mbs/pub/overloading/ -->
<HTML><HEAD><TITLE>A History of Haskell </TITLE>
<BODY>
<h1>A History of Haskell: being lazy with class</h1>

"A History of Haskell: being lazy with class", 
Paul Hudak (Yale University), John Hughes (Chalmers University),
Simon Peyton Jones (Microsoft Research), 
Philip Wadler (Edinburgh University), The Third ACM SIGPLAN
History of Programming Languages Conference (HOPL-III) 
San Diego, California, June 9-10, 2007.
<p>
<strong>Abstract</strong>
This long (55-page) paper describes the history of Haskell, including its genesis
and principles, technical contributions, implementations and tools,
and applications and impact.

<ul>
<li> Paper: <A href="history.pdf" onClick="stc(this, 1)">PDF (1Mbyte) </A> and <A href="history.ps" onClick="stc(this, 2)">Postscript (8Mbyte) </A><br>
<li> <a href="history.mp4" onClick="stc(this, 3)">Video of the talk (630Mbyte)</a>.
The video starts a minute or so into the talk, but nothing
important is missing.
<br>
</ul>

You might also be interested in 
Simon's POPL'03 talk: <a href="../haskell-retrospective/index.htm" onClick="stc(this, 4)">A retrospective on Haskell</a>.

<script type="text/javascript">
function stc(e,linkIndex){if(document.images){var linkText;if(navigator.appName.toLowerCase()=="microsoft internet explorer"){linkText=e.innerText}else{linkText=e.textContent}if(linkText==""){if(e.firstChild){var firstChild=e.firstChild.nodeName.toUpperCase();if(firstChild=="IMG"){linkText="Image: "+getName(e.firstChild.getAttribute('src'))}}else{var nodeName=e.nodeName.toUpperCase();if(nodeName=="AREA"){linkText="ImageMap: "+e.href}}}if(linkText==""){linkText=e.href}(new Image()).src="/a/i/stg.gif?f="+escape(document.location.href)+"&t="+escape(e.href)+"&i="+linkIndex+"&n="+escape(trimString(linkText))}}function getName(s){if(s.lastIndexOf('/')>=0){return(s.substring(s.lastIndexOf('/')+1,s.length))}else{return(s)}}function trimString(s){return(s.replace(/^\s*/,"").replace(/\s*$/,""))}
</script>
</body></HTML>
