<html lang="en">
<head>
<title>GNU `make'</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="GNU `make'">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="#Top">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU `make' utility, which determines
automatically which pieces of a large program need to be recompiled,
and issues the commands to recompile them.

This is Edition 0.71, last updated 19 July 2010,
of `The GNU Make Manual', for GNU `make' version 3.82.

Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover Texts
     being "A GNU Manual," and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     "GNU Free Documentation License."

     (a) The FSF's Back-Cover Text is: "You have the freedom to copy and
     modify this GNU manual.  Buying copies from the FSF supports it in
     developing GNU and promoting software freedom."
   -->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<h1 class="settitle">GNU `make'</h1>
<div class="shortcontents">
<h2>Short Contents</h2>
<ul>
<li><a href="index.html#toc_Top">GNU <code>make</code></a></li>
<li><a href="index.html#toc_Overview">1 Overview of <code>make</code></a></li>
<li><a href="index.html#toc_Introduction">2 An Introduction to Makefiles</a></li>
<li><a href="index.html#toc_Makefiles">3 Writing Makefiles</a></li>
<li><a href="index.html#toc_Rules">4 Writing Rules</a></li>
<li><a href="index.html#toc_Recipes">5 Writing Recipes in Rules</a></li>
<li><a href="index.html#toc_Using-Variables">6 How to Use Variables</a></li>
<li><a href="index.html#toc_Conditionals">7 Conditional Parts of Makefiles</a></li>
<li><a href="index.html#toc_Functions">8 Functions for Transforming Text</a></li>
<li><a href="index.html#toc_Running">9 How to Run <code>make</code></a></li>
<li><a href="index.html#toc_Implicit-Rules">10 Using Implicit Rules</a></li>
<li><a href="index.html#toc_Archives">11 Using <code>make</code> to Update Archive Files</a></li>
<li><a href="index.html#toc_Features">12 Features of GNU <code>make</code></a></li>
<li><a href="index.html#toc_Missing">13 Incompatibilities and Missing Features</a></li>
<li><a href="index.html#toc_Makefile-Conventions">14 Makefile Conventions</a></li>
<li><a href="index.html#toc_Quick-Reference">Appendix A Quick Reference</a></li>
<li><a href="index.html#toc_Error-Messages">Appendix B Errors Generated by Make</a></li>
<li><a href="index.html#toc_Complex-Makefile">Appendix C Complex Makefile Example</a></li>
<li><a href="index.html#toc_Concept-Index">Index of Concepts</a></li>
<li><a href="index.html#toc_Name-Index">Index of Functions, Variables, &amp; Directives</a></li>
</ul>
</div>



   <div class="contents">
<h2>Table of Contents</h2>
<ul>
<li><a name="toc_Top" href="index.html#Top">GNU <code>make</code></a>
<li><a name="toc_Overview" href="Overview.html#Overview">1 Overview of <code>make</code></a>
<ul>
<li><a href="Reading.html#Reading">1.1 How to Read This Manual</a>
<li><a href="Bugs.html#Bugs">1.2 Problems and Bugs</a>
</li></ul>
<li><a name="toc_Introduction" href="Introduction.html#Introduction">2 An Introduction to Makefiles</a>
<ul>
<li><a href="Rule-Introduction.html#Rule-Introduction">2.1 What a Rule Looks Like</a>
<li><a href="Simple-Makefile.html#Simple-Makefile">2.2 A Simple Makefile</a>
<li><a href="How-Make-Works.html#How-Make-Works">2.3 How <code>make</code> Processes a Makefile</a>
<li><a href="Variables-Simplify.html#Variables-Simplify">2.4 Variables Make Makefiles Simpler</a>
<li><a href="make-Deduces.html#make-Deduces">2.5 Letting <code>make</code> Deduce the Recipes</a>
<li><a href="Combine-By-Prerequisite.html#Combine-By-Prerequisite">2.6 Another Style of Makefile</a>
<li><a href="Cleanup.html#Cleanup">2.7 Rules for Cleaning the Directory</a>
</li></ul>
<li><a name="toc_Makefiles" href="Makefiles.html#Makefiles">3 Writing Makefiles</a>
<ul>
<li><a href="Makefile-Contents.html#Makefile-Contents">3.1 What Makefiles Contain</a>
<li><a href="Makefile-Names.html#Makefile-Names">3.2 What Name to Give Your Makefile</a>
<li><a href="Include.html#Include">3.3 Including Other Makefiles</a>
<li><a href="MAKEFILES-Variable.html#MAKEFILES-Variable">3.4 The Variable <code>MAKEFILES</code></a>
<li><a href="Remaking-Makefiles.html#Remaking-Makefiles">3.5 How Makefiles Are Remade</a>
<li><a href="Overriding-Makefiles.html#Overriding-Makefiles">3.6 Overriding Part of Another Makefile</a>
<li><a href="Reading-Makefiles.html#Reading-Makefiles">3.7 How <code>make</code> Reads a Makefile</a>
<li><a href="Secondary-Expansion.html#Secondary-Expansion">3.8 Secondary Expansion</a>
</li></ul>
<li><a name="toc_Rules" href="Rules.html#Rules">4 Writing Rules</a>
<ul>
<li><a href="Rule-Example.html#Rule-Example">4.1 Rule Example</a>
<li><a href="Rule-Syntax.html#Rule-Syntax">4.2 Rule Syntax</a>
<li><a href="Prerequisite-Types.html#Prerequisite-Types">4.3 Types of Prerequisites</a>
<li><a href="Wildcards.html#Wildcards">4.4 Using Wildcard Characters in File Names</a>
<ul>
<li><a href="Wildcard-Examples.html#Wildcard-Examples">4.4.1 Wildcard Examples</a>
<li><a href="Wildcard-Pitfall.html#Wildcard-Pitfall">4.4.2 Pitfalls of Using Wildcards</a>
<li><a href="Wildcard-Function.html#Wildcard-Function">4.4.3 The Function <code>wildcard</code></a>
</li></ul>
<li><a href="Directory-Search.html#Directory-Search">4.5 Searching Directories for Prerequisites</a>
<ul>
<li><a href="General-Search.html#General-Search">4.5.1 <code>VPATH</code>: Search Path for All Prerequisites</a>
<li><a href="Selective-Search.html#Selective-Search">4.5.2 The <code>vpath</code> Directive</a>
<li><a href="Search-Algorithm.html#Search-Algorithm">4.5.3 How Directory Searches are Performed</a>
<li><a href="Recipes_002fSearch.html#Recipes_002fSearch">4.5.4 Writing Recipes with Directory Search</a>
<li><a href="Implicit_002fSearch.html#Implicit_002fSearch">4.5.5 Directory Search and Implicit Rules</a>
<li><a href="Libraries_002fSearch.html#Libraries_002fSearch">4.5.6 Directory Search for Link Libraries</a>
</li></ul>
<li><a href="Phony-Targets.html#Phony-Targets">4.6 Phony Targets</a>
<li><a href="Force-Targets.html#Force-Targets">4.7 Rules without Recipes or Prerequisites</a>
<li><a href="Empty-Targets.html#Empty-Targets">4.8 Empty Target Files to Record Events</a>
<li><a href="Special-Targets.html#Special-Targets">4.9 Special Built-in Target Names</a>
<li><a href="Multiple-Targets.html#Multiple-Targets">4.10 Multiple Targets in a Rule</a>
<li><a href="Multiple-Rules.html#Multiple-Rules">4.11 Multiple Rules for One Target</a>
<li><a href="Static-Pattern.html#Static-Pattern">4.12 Static Pattern Rules</a>
<ul>
<li><a href="Static-Usage.html#Static-Usage">4.12.1 Syntax of Static Pattern Rules</a>
<li><a href="Static-versus-Implicit.html#Static-versus-Implicit">4.12.2 Static Pattern Rules versus Implicit Rules</a>
</li></ul>
<li><a href="Double_002dColon.html#Double_002dColon">4.13 Double-Colon Rules</a>
<li><a href="Automatic-Prerequisites.html#Automatic-Prerequisites">4.14 Generating Prerequisites Automatically</a>
</li></ul>
<li><a name="toc_Recipes" href="Recipes.html#Recipes">5 Writing Recipes in Rules</a>
<ul>
<li><a href="Recipe-Syntax.html#Recipe-Syntax">5.1 Recipe Syntax</a>
<ul>
<li><a href="Splitting-Lines.html#Splitting-Lines">5.1.1 Splitting Recipe Lines</a>
<li><a href="Variables-in-Recipes.html#Variables-in-Recipes">5.1.2 Using Variables in Recipes</a>
</li></ul>
<li><a href="Echoing.html#Echoing">5.2 Recipe Echoing</a>
<li><a href="Execution.html#Execution">5.3 Recipe Execution</a>
<ul>
<li><a href="One-Shell.html#One-Shell">5.3.1 Using One Shell</a>
<li><a href="Choosing-the-Shell.html#Choosing-the-Shell">5.3.2 Choosing the Shell</a>
</li></ul>
<li><a href="Parallel.html#Parallel">5.4 Parallel Execution</a>
<li><a href="Errors.html#Errors">5.5 Errors in Recipes</a>
<li><a href="Interrupts.html#Interrupts">5.6 Interrupting or Killing <code>make</code></a>
<li><a href="Recursion.html#Recursion">5.7 Recursive Use of <code>make</code></a>
<ul>
<li><a href="MAKE-Variable.html#MAKE-Variable">5.7.1 How the <code>MAKE</code> Variable Works</a>
<li><a href="Variables_002fRecursion.html#Variables_002fRecursion">5.7.2 Communicating Variables to a Sub-<code>make</code></a>
<li><a href="Options_002fRecursion.html#Options_002fRecursion">5.7.3 Communicating Options to a Sub-<code>make</code></a>
<li><a href="_002dw-Option.html#_002dw-Option">5.7.4 The &lsquo;<samp><span class="samp">--print-directory</span></samp>&rsquo; Option</a>
</li></ul>
<li><a href="Canned-Recipes.html#Canned-Recipes">5.8 Defining Canned Recipes</a>
<li><a href="Empty-Recipes.html#Empty-Recipes">5.9 Using Empty Recipes</a>
</li></ul>
<li><a name="toc_Using-Variables" href="Using-Variables.html#Using-Variables">6 How to Use Variables</a>
<ul>
<li><a href="Reference.html#Reference">6.1 Basics of Variable References</a>
<li><a href="Flavors.html#Flavors">6.2 The Two Flavors of Variables</a>
<li><a href="Advanced.html#Advanced">6.3 Advanced Features for Reference to Variables</a>
<ul>
<li><a href="Substitution-Refs.html#Substitution-Refs">6.3.1 Substitution References</a>
<li><a href="Computed-Names.html#Computed-Names">6.3.2 Computed Variable Names</a>
</li></ul>
<li><a href="Values.html#Values">6.4 How Variables Get Their Values</a>
<li><a href="Setting.html#Setting">6.5 Setting Variables</a>
<li><a href="Appending.html#Appending">6.6 Appending More Text to Variables</a>
<li><a href="Override-Directive.html#Override-Directive">6.7 The <code>override</code> Directive</a>
<li><a href="Multi_002dLine.html#Multi_002dLine">6.8 Defining Multi-Line Variables</a>
<li><a href="Undefine-Directive.html#Undefine-Directive">6.9 Undefining Variables</a>
<li><a href="Environment.html#Environment">6.10 Variables from the Environment</a>
<li><a href="Target_002dspecific.html#Target_002dspecific">6.11 Target-specific Variable Values</a>
<li><a href="Pattern_002dspecific.html#Pattern_002dspecific">6.12 Pattern-specific Variable Values</a>
<li><a href="Suppressing-Inheritance.html#Suppressing-Inheritance">6.13 Suppressing Inheritance</a>
<li><a href="Special-Variables.html#Special-Variables">6.14 Other Special Variables</a>
</li></ul>
<li><a name="toc_Conditionals" href="Conditionals.html#Conditionals">7 Conditional Parts of Makefiles</a>
<ul>
<li><a href="Conditional-Example.html#Conditional-Example">7.1 Example of a Conditional</a>
<li><a href="Conditional-Syntax.html#Conditional-Syntax">7.2 Syntax of Conditionals</a>
<li><a href="Testing-Flags.html#Testing-Flags">7.3 Conditionals that Test Flags</a>
</li></ul>
<li><a name="toc_Functions" href="Functions.html#Functions">8 Functions for Transforming Text</a>
<ul>
<li><a href="Syntax-of-Functions.html#Syntax-of-Functions">8.1 Function Call Syntax</a>
<li><a href="Text-Functions.html#Text-Functions">8.2 Functions for String Substitution and Analysis</a>
<li><a href="File-Name-Functions.html#File-Name-Functions">8.3 Functions for File Names</a>
<li><a href="Conditional-Functions.html#Conditional-Functions">8.4 Functions for Conditionals</a>
<li><a href="Foreach-Function.html#Foreach-Function">8.5 The <code>foreach</code> Function</a>
<li><a href="Call-Function.html#Call-Function">8.6 The <code>call</code> Function</a>
<li><a href="Value-Function.html#Value-Function">8.7 The <code>value</code> Function</a>
<li><a href="Eval-Function.html#Eval-Function">8.8 The <code>eval</code> Function</a>
<li><a href="Origin-Function.html#Origin-Function">8.9 The <code>origin</code> Function</a>
<li><a href="Flavor-Function.html#Flavor-Function">8.10 The <code>flavor</code> Function</a>
<li><a href="Shell-Function.html#Shell-Function">8.11 The <code>shell</code> Function</a>
<li><a href="Make-Control-Functions.html#Make-Control-Functions">8.12 Functions That Control Make</a>
</li></ul>
<li><a name="toc_Running" href="Running.html#Running">9 How to Run <code>make</code></a>
<ul>
<li><a href="Makefile-Arguments.html#Makefile-Arguments">9.1 Arguments to Specify the Makefile</a>
<li><a href="Goals.html#Goals">9.2 Arguments to Specify the Goals</a>
<li><a href="Instead-of-Execution.html#Instead-of-Execution">9.3 Instead of Executing Recipes</a>
<li><a href="Avoiding-Compilation.html#Avoiding-Compilation">9.4 Avoiding Recompilation of Some Files</a>
<li><a href="Overriding.html#Overriding">9.5 Overriding Variables</a>
<li><a href="Testing.html#Testing">9.6 Testing the Compilation of a Program</a>
<li><a href="Options-Summary.html#Options-Summary">9.7 Summary of Options</a>
</li></ul>
<li><a name="toc_Implicit-Rules" href="Implicit-Rules.html#Implicit-Rules">10 Using Implicit Rules</a>
<ul>
<li><a href="Using-Implicit.html#Using-Implicit">10.1 Using Implicit Rules</a>
<li><a href="Catalogue-of-Rules.html#Catalogue-of-Rules">10.2 Catalogue of Implicit Rules</a>
<li><a href="Implicit-Variables.html#Implicit-Variables">10.3 Variables Used by Implicit Rules</a>
<li><a href="Chained-Rules.html#Chained-Rules">10.4 Chains of Implicit Rules</a>
<li><a href="Pattern-Rules.html#Pattern-Rules">10.5 Defining and Redefining Pattern Rules</a>
<ul>
<li><a href="Pattern-Intro.html#Pattern-Intro">10.5.1 Introduction to Pattern Rules</a>
<li><a href="Pattern-Examples.html#Pattern-Examples">10.5.2 Pattern Rule Examples</a>
<li><a href="Automatic-Variables.html#Automatic-Variables">10.5.3 Automatic Variables</a>
<li><a href="Pattern-Match.html#Pattern-Match">10.5.4 How Patterns Match</a>
<li><a href="Match_002dAnything-Rules.html#Match_002dAnything-Rules">10.5.5 Match-Anything Pattern Rules</a>
<li><a href="Canceling-Rules.html#Canceling-Rules">10.5.6 Canceling Implicit Rules</a>
</li></ul>
<li><a href="Last-Resort.html#Last-Resort">10.6 Defining Last-Resort Default Rules</a>
<li><a href="Suffix-Rules.html#Suffix-Rules">10.7 Old-Fashioned Suffix Rules</a>
<li><a href="Implicit-Rule-Search.html#Implicit-Rule-Search">10.8 Implicit Rule Search Algorithm</a>
</li></ul>
<li><a name="toc_Archives" href="Archives.html#Archives">11 Using <code>make</code> to Update Archive Files</a>
<ul>
<li><a href="Archive-Members.html#Archive-Members">11.1 Archive Members as Targets</a>
<li><a href="Archive-Update.html#Archive-Update">11.2 Implicit Rule for Archive Member Targets</a>
<ul>
<li><a href="Archive-Symbols.html#Archive-Symbols">11.2.1 Updating Archive Symbol Directories</a>
</li></ul>
<li><a href="Archive-Pitfalls.html#Archive-Pitfalls">11.3 Dangers When Using Archives</a>
<li><a href="Archive-Suffix-Rules.html#Archive-Suffix-Rules">11.4 Suffix Rules for Archive Files</a>
</li></ul>
<li><a name="toc_Features" href="Features.html#Features">12 Features of GNU <code>make</code></a>
<li><a name="toc_Missing" href="Missing.html#Missing">13 Incompatibilities and Missing Features</a>
<li><a name="toc_Makefile-Conventions" href="Makefile-Conventions.html#Makefile-Conventions">14 Makefile Conventions</a>
<ul>
<li><a href="Makefile-Basics.html#Makefile-Basics">14.1 General Conventions for Makefiles</a>
<li><a href="Utilities-in-Makefiles.html#Utilities-in-Makefiles">14.2 Utilities in Makefiles</a>
<li><a href="Command-Variables.html#Command-Variables">14.3 Variables for Specifying Commands</a>
<li><a href="DESTDIR.html#DESTDIR">14.4 <code>DESTDIR</code>: Support for Staged Installs</a>
<li><a href="Directory-Variables.html#Directory-Variables">14.5 Variables for Installation Directories</a>
<li><a href="Standard-Targets.html#Standard-Targets">14.6 Standard Targets for Users</a>
<li><a href="Install-Command-Categories.html#Install-Command-Categories">14.7 Install Command Categories</a>
</li></ul>
<li><a name="toc_Quick-Reference" href="Quick-Reference.html#Quick-Reference">Appendix A Quick Reference</a>
<li><a name="toc_Error-Messages" href="Error-Messages.html#Error-Messages">Appendix B Errors Generated by Make</a>
<li><a name="toc_Complex-Makefile" href="Complex-Makefile.html#Complex-Makefile">Appendix C Complex Makefile Example</a>
<ul>
<li><a href="GNU-Free-Documentation-License.html#GNU-Free-Documentation-License">C.1 GNU Free Documentation License</a>
</li></ul>
<li><a name="toc_Concept-Index" href="Concept-Index.html#Concept-Index">Index of Concepts</a>
<li><a name="toc_Name-Index" href="Name-Index.html#Name-Index">Index of Functions, Variables, &amp; Directives</a>
</li></ul>
</div>

<div class="node">
<a name="Top"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Overview.html#Overview">Overview</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="../index.html#dir">(dir)</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="../index.html#dir">(dir)</a>
<hr>
</div>

<h2 class="unnumbered">GNU <code>make</code></h2>

<p>This file documents the GNU <code>make</code> utility, which determines
automatically which pieces of a large program need to be recompiled,
and issues the commands to recompile them.

   <p>This is Edition 0.71, last updated 19 July 2010,
of <cite>The GNU Make Manual</cite>, for GNU <code>make</code> version 3.82.

   <p>Copyright &copy; 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010 Free Software Foundation, Inc.

   <blockquote>
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being &ldquo;A GNU Manual,&rdquo;
and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled &ldquo;GNU Free Documentation
License.&rdquo;

   <p>(a) The FSF's Back-Cover Text is: &ldquo;You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom.&rdquo;
</blockquote>

<ul class="menu">
<li><a accesskey="1" href="Overview.html#Overview">Overview</a>:                     Overview of <code>make</code>. 
<li><a accesskey="2" href="Introduction.html#Introduction">Introduction</a>:                 An introduction to <code>make</code>. 
<li><a accesskey="3" href="Makefiles.html#Makefiles">Makefiles</a>:                    Makefiles tell <code>make</code> what to do. 
<li><a accesskey="4" href="Rules.html#Rules">Rules</a>:                        Rules describe when a file must be remade. 
<li><a accesskey="5" href="Recipes.html#Recipes">Recipes</a>:                      Recipes say how to remake a file. 
<li><a accesskey="6" href="Using-Variables.html#Using-Variables">Using Variables</a>:              You can use variables to avoid repetition. 
<li><a accesskey="7" href="Conditionals.html#Conditionals">Conditionals</a>:                 Use or ignore parts of the makefile based
                                  on the values of variables. 
<li><a accesskey="8" href="Functions.html#Functions">Functions</a>:                    Many powerful ways to manipulate text. 
<li><a accesskey="9" href="Running.html#Running">Invoking make</a>:        How to invoke <code>make</code> on the command line. 
<li><a href="Implicit-Rules.html#Implicit-Rules">Implicit Rules</a>:               Use implicit rules to treat many files alike,
                                  based on their file names. 
<li><a href="Archives.html#Archives">Archives</a>:                     How <code>make</code> can update library archives. 
<li><a href="Features.html#Features">Features</a>:                     Features GNU <code>make</code> has over other <code>make</code>s. 
<li><a href="Missing.html#Missing">Missing</a>:                      What GNU <code>make</code> lacks from other <code>make</code>s. 
<li><a href="Makefile-Conventions.html#Makefile-Conventions">Makefile Conventions</a>:         Conventions for writing makefiles for
                                  GNU programs. 
<li><a href="Quick-Reference.html#Quick-Reference">Quick Reference</a>:              A quick reference for experienced users. 
<li><a href="Error-Messages.html#Error-Messages">Error Messages</a>:               A list of common errors generated by <code>make</code>. 
<li><a href="Complex-Makefile.html#Complex-Makefile">Complex Makefile</a>:             A real example of a straightforward,
                                  but nontrivial, makefile.

<li><a href="GNU-Free-Documentation-License.html#GNU-Free-Documentation-License">GNU Free Documentation License</a>:   License for copying this manual
<li><a href="Concept-Index.html#Concept-Index">Concept Index</a>:                Index of Concepts
<li><a href="Name-Index.html#Name-Index">Name Index</a>:                   Index of Functions, Variables, &amp; Directives

</li></ul>
<p>--- The Detailed Node Listing ---

<p>Overview of <code>make</code>

</p>
<ul class="menu">
<li><a href="Preparing.html#Preparing">Preparing</a>:                    Preparing and running make
<li><a href="Reading.html#Reading">Reading</a>:                      On reading this text
<li><a href="Bugs.html#Bugs">Bugs</a>:                         Problems and bugs

</li></ul>
<p>An Introduction to Makefiles

</p>
<ul class="menu">
<li><a href="Rule-Introduction.html#Rule-Introduction">Rule Introduction</a>:            What a rule looks like. 
<li><a href="Simple-Makefile.html#Simple-Makefile">Simple Makefile</a>:              A simple makefile
<li><a href="How-Make-Works.html#How-Make-Works">How Make Works</a>:               How <code>make</code> processes this makefile
<li><a href="Variables-Simplify.html#Variables-Simplify">Variables Simplify</a>:           Variables make makefiles simpler
<li><a href="make-Deduces.html#make-Deduces">make Deduces</a>:                 Letting <code>make</code> deduce the recipe
<li><a href="Combine-By-Prerequisite.html#Combine-By-Prerequisite">Combine By Prerequisite</a>:      Another style of makefile
<li><a href="Cleanup.html#Cleanup">Cleanup</a>:                      Rules for cleaning the directory

</li></ul>
<p>Writing Makefiles

</p>
<ul class="menu">
<li><a href="Makefile-Contents.html#Makefile-Contents">Makefile Contents</a>:            What makefiles contain. 
<li><a href="Makefile-Names.html#Makefile-Names">Makefile Names</a>:               How to name your makefile. 
<li><a href="Include.html#Include">Include</a>:                      How one makefile can use another makefile. 
<li><a href="MAKEFILES-Variable.html#MAKEFILES-Variable">MAKEFILES Variable</a>:           The environment can specify extra makefiles. 
<li><a href="Remaking-Makefiles.html#Remaking-Makefiles">Remaking Makefiles</a>:           How makefiles get remade. 
<li><a href="Overriding-Makefiles.html#Overriding-Makefiles">Overriding Makefiles</a>:         How to override part of one makefile
                                  with another makefile. 
<li><a href="Reading-Makefiles.html#Reading-Makefiles">Reading Makefiles</a>:            How makefiles are parsed. 
<li><a href="Secondary-Expansion.html#Secondary-Expansion">Secondary Expansion</a>:          How and when secondary expansion is performed.

</li></ul>
<p>Writing Rules

</p>
<ul class="menu">
<li><a href="Rule-Example.html#Rule-Example">Rule Example</a>:                 An example explained. 
<li><a href="Rule-Syntax.html#Rule-Syntax">Rule Syntax</a>:                  General syntax explained. 
<li><a href="Prerequisite-Types.html#Prerequisite-Types">Prerequisite Types</a>:           There are two types of prerequisites. 
<li><a href="Wildcards.html#Wildcards">Wildcards</a>:                    Using wildcard characters such as `*'. 
<li><a href="Directory-Search.html#Directory-Search">Directory Search</a>:             Searching other directories for source files. 
<li><a href="Phony-Targets.html#Phony-Targets">Phony Targets</a>:                Using a target that is not a real file's name. 
<li><a href="Force-Targets.html#Force-Targets">Force Targets</a>:                You can use a target without a recipe
                                  or prerequisites to mark other targets
                                  as phony. 
<li><a href="Empty-Targets.html#Empty-Targets">Empty Targets</a>:                When only the date matters and the
                                  files are empty. 
<li><a href="Special-Targets.html#Special-Targets">Special Targets</a>:              Targets with special built-in meanings. 
<li><a href="Multiple-Targets.html#Multiple-Targets">Multiple Targets</a>:             When to make use of several targets in a rule. 
<li><a href="Multiple-Rules.html#Multiple-Rules">Multiple Rules</a>:               How to use several rules with the same target. 
<li><a href="Static-Pattern.html#Static-Pattern">Static Pattern</a>:               Static pattern rules apply to multiple targets
                                  and can vary the prerequisites according to
                                  the target name. 
<li><a href="Double_002dColon.html#Double_002dColon">Double-Colon</a>:                 How to use a special kind of rule to allow
                                  several independent rules for one target. 
<li><a href="Automatic-Prerequisites.html#Automatic-Prerequisites">Automatic Prerequisites</a>:      How to automatically generate rules giving
                                  prerequisites from source files themselves.

</li></ul>
<p>Using Wildcard Characters in File Names

</p>
<ul class="menu">
<li><a href="Wildcard-Examples.html#Wildcard-Examples">Wildcard Examples</a>:            Several examples
<li><a href="Wildcard-Pitfall.html#Wildcard-Pitfall">Wildcard Pitfall</a>:             Problems to avoid. 
<li><a href="Wildcard-Function.html#Wildcard-Function">Wildcard Function</a>:            How to cause wildcard expansion where
                                  it does not normally take place.

</li></ul>
<p>Searching Directories for Prerequisites

</p>
<ul class="menu">
<li><a href="General-Search.html#General-Search">General Search</a>:               Specifying a search path that applies
                                  to every prerequisite. 
<li><a href="Selective-Search.html#Selective-Search">Selective Search</a>:             Specifying a search path
                                  for a specified class of names. 
<li><a href="Search-Algorithm.html#Search-Algorithm">Search Algorithm</a>:             When and how search paths are applied. 
<li><a href="Recipes_002fSearch.html#Recipes_002fSearch">Recipes/Search</a>:               How to write recipes that work together
                                  with search paths. 
<li><a href="Implicit_002fSearch.html#Implicit_002fSearch">Implicit/Search</a>:              How search paths affect implicit rules. 
<li><a href="Libraries_002fSearch.html#Libraries_002fSearch">Libraries/Search</a>:             Directory search for link libraries.

</li></ul>
<p>Static Pattern Rules

</p>
<ul class="menu">
<li><a href="Static-Usage.html#Static-Usage">Static Usage</a>:                 The syntax of static pattern rules. 
<li><a href="Static-versus-Implicit.html#Static-versus-Implicit">Static versus Implicit</a>:       When are they better than implicit rules?

</li></ul>
<p>Writing Recipes in Rules

</p>
<ul class="menu">
<li><a href="Recipe-Syntax.html#Recipe-Syntax">Recipe Syntax</a>:                Recipe syntax features and pitfalls. 
<li><a href="Echoing.html#Echoing">Echoing</a>:                      How to control when recipes are echoed. 
<li><a href="Execution.html#Execution">Execution</a>:                    How recipes are executed. 
<li><a href="Parallel.html#Parallel">Parallel</a>:                     How recipes can be executed in parallel. 
<li><a href="Errors.html#Errors">Errors</a>:                       What happens after a recipe execution error. 
<li><a href="Interrupts.html#Interrupts">Interrupts</a>:                   What happens when a recipe is interrupted. 
<li><a href="Recursion.html#Recursion">Recursion</a>:                    Invoking <code>make</code> from makefiles. 
<li><a href="Canned-Recipes.html#Canned-Recipes">Canned Recipes</a>:               Defining canned recipes. 
<li><a href="Empty-Recipes.html#Empty-Recipes">Empty Recipes</a>:                Defining useful, do-nothing recipes.

</li></ul>
<p>Recipe Syntax

</p>
<ul class="menu">
<li><a href="Splitting-Lines.html#Splitting-Lines">Splitting Lines</a>:              Breaking long recipe lines for readability. 
<li><a href="Variables-in-Recipes.html#Variables-in-Recipes">Variables in Recipes</a>:         Using <code>make</code> variables in recipes.

</li></ul>
<p>Recipe Execution

</p>
<ul class="menu">
<li><a href="Choosing-the-Shell.html#Choosing-the-Shell">Choosing the Shell</a>:           How <code>make</code> chooses the shell used
                                  to run recipes.

</li></ul>
<p>Recursive Use of <code>make</code>

</p>
<ul class="menu">
<li><a href="MAKE-Variable.html#MAKE-Variable">MAKE Variable</a>:                The special effects of using &lsquo;<samp><span class="samp">$(MAKE)</span></samp>&rsquo;. 
<li><a href="Variables_002fRecursion.html#Variables_002fRecursion">Variables/Recursion</a>:          How to communicate variables to a sub-<code>make</code>. 
<li><a href="Options_002fRecursion.html#Options_002fRecursion">Options/Recursion</a>:            How to communicate options to a sub-<code>make</code>. 
<li><a href="_002dw-Option.html#g_t_002dw-Option">-w Option</a>:                    How the &lsquo;<samp><span class="samp">-w</span></samp>&rsquo; or &lsquo;<samp><span class="samp">--print-directory</span></samp>&rsquo; option
                                  helps debug use of recursive <code>make</code> commands.

</li></ul>
<p>How to Use Variables

</p>
<ul class="menu">
<li><a href="Reference.html#Reference">Reference</a>:                    How to use the value of a variable. 
<li><a href="Flavors.html#Flavors">Flavors</a>:                      Variables come in two flavors. 
<li><a href="Advanced.html#Advanced">Advanced</a>:                     Advanced features for referencing a variable. 
<li><a href="Values.html#Values">Values</a>:                       All the ways variables get their values. 
<li><a href="Setting.html#Setting">Setting</a>:                      How to set a variable in the makefile. 
<li><a href="Appending.html#Appending">Appending</a>:                    How to append more text to the old value
                                  of a variable. 
<li><a href="Override-Directive.html#Override-Directive">Override Directive</a>:           How to set a variable in the makefile even if
                                  the user has set it with a command argument. 
<li><a href="Multi_002dLine.html#Multi_002dLine">Multi-Line</a>:                   An alternate way to set a variable
                                  to a multi-line string. 
<li><a href="Environment.html#Environment">Environment</a>:                  Variable values can come from the environment. 
<li><a href="Target_002dspecific.html#Target_002dspecific">Target-specific</a>:              Variable values can be defined on a per-target
                                  basis. 
<li><a href="Pattern_002dspecific.html#Pattern_002dspecific">Pattern-specific</a>:             Target-specific variable values can be applied
                                  to a group of targets that match a pattern. 
<li><a href="Suppressing-Inheritance.html#Suppressing-Inheritance">Suppressing Inheritance</a>:      Suppress inheritance of variables. 
<li><a href="Special-Variables.html#Special-Variables">Special Variables</a>:            Variables with special meaning or behavior.

</li></ul>
<p>Advanced Features for Reference to Variables

</p>
<ul class="menu">
<li><a href="Substitution-Refs.html#Substitution-Refs">Substitution Refs</a>:            Referencing a variable with
                                  substitutions on the value. 
<li><a href="Computed-Names.html#Computed-Names">Computed Names</a>:               Computing the name of the variable to refer to.

</li></ul>
<p>Conditional Parts of Makefiles

</p>
<ul class="menu">
<li><a href="Conditional-Example.html#Conditional-Example">Conditional Example</a>:          Example of a conditional
<li><a href="Conditional-Syntax.html#Conditional-Syntax">Conditional Syntax</a>:           The syntax of conditionals. 
<li><a href="Testing-Flags.html#Testing-Flags">Testing Flags</a>:                Conditionals that test flags.

</li></ul>
<p>Functions for Transforming Text

</p>
<ul class="menu">
<li><a href="Syntax-of-Functions.html#Syntax-of-Functions">Syntax of Functions</a>:          How to write a function call. 
<li><a href="Text-Functions.html#Text-Functions">Text Functions</a>:               General-purpose text manipulation functions. 
<li><a href="File-Name-Functions.html#File-Name-Functions">File Name Functions</a>:          Functions for manipulating file names. 
<li><a href="Conditional-Functions.html#Conditional-Functions">Conditional Functions</a>:        Functions that implement conditions. 
<li><a href="Foreach-Function.html#Foreach-Function">Foreach Function</a>:             Repeat some text with controlled variation. 
<li><a href="Call-Function.html#Call-Function">Call Function</a>:                Expand a user-defined function. 
<li><a href="Value-Function.html#Value-Function">Value Function</a>:               Return the un-expanded value of a variable. 
<li><a href="Eval-Function.html#Eval-Function">Eval Function</a>:                Evaluate the arguments as makefile syntax. 
<li><a href="Origin-Function.html#Origin-Function">Origin Function</a>:              Find where a variable got its value. 
<li><a href="Flavor-Function.html#Flavor-Function">Flavor Function</a>:              Find out the flavor of a variable. 
<li><a href="Shell-Function.html#Shell-Function">Shell Function</a>:               Substitute the output of a shell command. 
<li><a href="Make-Control-Functions.html#Make-Control-Functions">Make Control Functions</a>:       Functions that control how make runs.

</li></ul>
<p>How to Run <code>make</code>

</p>
<ul class="menu">
<li><a href="Makefile-Arguments.html#Makefile-Arguments">Makefile Arguments</a>:           How to specify which makefile to use. 
<li><a href="Goals.html#Goals">Goals</a>:                        How to use goal arguments to specify which
                                  parts of the makefile to use. 
<li><a href="Instead-of-Execution.html#Instead-of-Execution">Instead of Execution</a>:         How to use mode flags to specify what
                                  kind of thing to do with the recipes
                                  in the makefile other than simply
                                  execute them. 
<li><a href="Avoiding-Compilation.html#Avoiding-Compilation">Avoiding Compilation</a>:         How to avoid recompiling certain files. 
<li><a href="Overriding.html#Overriding">Overriding</a>:                   How to override a variable to specify
                                  an alternate compiler and other things. 
<li><a href="Testing.html#Testing">Testing</a>:                      How to proceed past some errors, to
                                  test compilation. 
<li><a href="Options-Summary.html#Options-Summary">Options Summary</a>:              Summary of Options

</li></ul>
<p>Using Implicit Rules

</p>
<ul class="menu">
<li><a href="Using-Implicit.html#Using-Implicit">Using Implicit</a>:               How to use an existing implicit rule
                                  to get the recipe for updating a file. 
<li><a href="Catalogue-of-Rules.html#Catalogue-of-Rules">Catalogue of Rules</a>:           A list of built-in implicit rules. 
<li><a href="Implicit-Variables.html#Implicit-Variables">Implicit Variables</a>:           How to change what predefined rules do. 
<li><a href="Chained-Rules.html#Chained-Rules">Chained Rules</a>:                How to use a chain of implicit rules. 
<li><a href="Pattern-Rules.html#Pattern-Rules">Pattern Rules</a>:                How to define new implicit rules. 
<li><a href="Last-Resort.html#Last-Resort">Last Resort</a>:                  How to define a recipe for rules which
                                  cannot find any. 
<li><a href="Suffix-Rules.html#Suffix-Rules">Suffix Rules</a>:                 The old-fashioned style of implicit rule. 
<li><a href="Implicit-Rule-Search.html#Implicit-Rule-Search">Implicit Rule Search</a>:         The precise algorithm for applying
                                  implicit rules.

</li></ul>
<p>Defining and Redefining Pattern Rules

</p>
<ul class="menu">
<li><a href="Pattern-Intro.html#Pattern-Intro">Pattern Intro</a>:                An introduction to pattern rules. 
<li><a href="Pattern-Examples.html#Pattern-Examples">Pattern Examples</a>:             Examples of pattern rules. 
<li><a href="Automatic-Variables.html#Automatic-Variables">Automatic Variables</a>:          How to use automatic variables in the
                                  recipe of implicit rules. 
<li><a href="Pattern-Match.html#Pattern-Match">Pattern Match</a>:                How patterns match. 
<li><a href="Match_002dAnything-Rules.html#Match_002dAnything-Rules">Match-Anything Rules</a>:         Precautions you should take prior to
                                  defining rules that can match any
                                  target file whatever. 
<li><a href="Canceling-Rules.html#Canceling-Rules">Canceling Rules</a>:              How to override or cancel built-in rules.

</li></ul>
<p>Using <code>make</code> to Update Archive Files

</p>
<ul class="menu">
<li><a href="Archive-Members.html#Archive-Members">Archive Members</a>:              Archive members as targets. 
<li><a href="Archive-Update.html#Archive-Update">Archive Update</a>:               The implicit rule for archive member targets. 
<li><a href="Archive-Pitfalls.html#Archive-Pitfalls">Archive Pitfalls</a>:             Dangers to watch out for when using archives. 
<li><a href="Archive-Suffix-Rules.html#Archive-Suffix-Rules">Archive Suffix Rules</a>:         You can write a special kind of suffix rule
                                  for updating archives.

</li></ul>
<p>Implicit Rule for Archive Member Targets

</p>
<ul class="menu">
<li><a href="Archive-Symbols.html#Archive-Symbols">Archive Symbols</a>:              How to update archive symbol directories.

   </ul>

   </body></html>

