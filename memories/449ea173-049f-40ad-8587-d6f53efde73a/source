<!DOCTYPE html>
<html lang="">

<head>
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<meta charset="utf-8">
	<title>mvanier: Yet Another Monad Tutorial (part 3: The Monad Laws)</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	

	<link rel="home" title="Home" href="http://www.livejournal.com/">
	<link rel="contents" title="Site Map" href="http://www.livejournal.com/site/">
	<link rel="help" title="Technical Support" href="http://www.livejournal.com/support/">

	<link rel="apple-touch-icon" href="http://l-stat.livejournal.com/img/apple-touch-icon.png?v=6037">
	
		<!--[if IE]><link rel="shortcut icon" type="image/x-icon" href="http://l-stat.livejournal.com/img/userinfo.ico"><![endif]-->
		<link rel="icon" type="image/gif" href="http://l-stat.livejournal.com/img/userinfo.gif">
	

	
	

	

	

	<link rel="stylesheet" type="text/css" href="http://l-stat.livejournal.com/??.b4be?v=1363723174" />
<!--[if lt IE 7]><link rel="stylesheet" type="text/css" href="http://l-stat.livejournal.com/??lj_base-ie.css,horizon/ie.css?v=1363723174" /><![endif]-->
<!--[if lte IE 7]><link rel="stylesheet" type="text/css" href="http://l-stat.livejournal.com/??interstitial_banner_us.css?v=1363723174" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="http://l-stat.livejournal.com/??ie.css,popup/popupus-ie.css?v=1363723174" /><![endif]-->

	            <script type="text/javascript">
                Site = window.Site || {};
                Site.ml_text = {"fotki.photo.upload.error.file_type_not_supported":"File type is not supported","fotki.album.link.click.to.upload":"Click to upload <br> new images","talk.link.button":"Insert","fotki.privacy":"Privacy","fotki.album.description":"Add your description","fotki.album.no.pics":"There are no photos in this album.","fotki.album.add.photos":"To add multiple files, hold down the CTRL or Shift button.","fotki.album.link.from.image":"Link from this image (optional)","fotki.album.stop.upload.confirm":"Do you really want to stop the upload and close without saving? ","fotki.photo.upload.error.file_not_selected":"File not selected","confirm.bubble.no":"No","fotki.album.upload.unknown.error":"Unknown error","fotki.photo.upload.error.not_enough_space":"Scrapbook: not enough space","fotki.album.add.images":"Add to post","fotki.album.change":"Your current selection will be lost. Do you really want to change albums? ","fotki.album.album_cover":"Album cover","talk.postcomment":"Add a comment","fotki.album.close.without.saving.confirm":"Do you really want to close without saving?","fotki.album.new.album.name":"New album name","fotki.album.custom.size":"Custom","fotki.photo.upload.error.no_access_to_storage_media":"No access to storage media","talk.link.button.delete":"Delete","talk.editcomment":"Save comment","fotki.album.stop.upload":"Stop uploading?","fotki.album.comment.images":"Add to comment","confirm.bubble.yes":"Yes","talk.answer":"Reply","fotki.album.paste.from.album":"From Album","fotki.album.resize.to.post":"Resize","fotki.album.browse.photo":"Browse","fotki.album.click.image":"Click on image to remove it.","fotki.album.remove.this.image":"Remove this image","talk.spamcount":"[[count]] [[?count|suspicious comment|suspicious comments]]","talk.replycount":"[[count]] [[?count|comment|comments]]","fotki.album.save.images":"Save images","fotki.photo.upload.error.common_error":"Common error","fotki.album.upgrade":"Extra Storage Space","widget.form.skip_word":"Skip word","fotki.album.create.new":"(Create new)","fotki.album.select_album":"Select album:","fotki.album.uploading.image":"Uploading image...","fotki.album.upload.images":"Upload images","fotki.album.add.image.name":"Add image name","fotki.photo.upload.error.forbidden":"You cannot access this page because this journal is not visible.","pics.ui.link_to_original_title":"Check to include a link to the full size image","fotki.photo.upload.error.cant_get_storage_space":"Can't get count of used storage space","fotki.album.remove.image":"Remove this image","fotki.album.uploading.message":"Uploading...","fotki.album.load.more":"Loading more..","fotki.album.available.now":"Available now","fotki.branding_04_2012.html":"<a href=\"http://url\">link</a>","fotki.album.cancel.album":"Cancel","fotki.album.upload.io.error":"","fotki.album.resize.width":"Width","fotki.photo.upload.error.no_access_rpc":"Internal Error","talk.general.save":"Save","entry.reference.label.reposted":"Reposted","talk.replytothis":"Reply","fotki.album.paste.url":"Paste URL","fotki.photo.upload.error.auth_token_invalid":"Auth error","fotki.album.post.images":"Add to post","pics.ui.link_to_original":"Add a link to the original image","fotki.album.default.sizes":"Default sizes","widget.form.no_suggestions":"No suggestions","entry.reference.label.title":"Remove repost","fotki.album.resize.height":"Height","fotki.album.paste.url.here":"Paste image URL here"};
                Site.page = {"hasactiveuserpic":0,"ajaxPagination":1,"fotki":{"uploader":{"albumsData":[],"action":"add_new_post","privacyData":[{"groupname":"Everyone (Public)","security":"public"},{"groupname":"Friends","security":"allfriends"},{"groupname":"Just Me (Private)","security":"private"}],"tracking_opendialog":"tracking_photouploaded","sizesData":[{"is_default":0,"text":"100","size":"100"},{"is_default":0,"text":"300","size":"300"},{"is_default":0,"text":"600","size":"600"},{"is_default":1,"text":"900","size":"900"},{"is_default":0,"text":"1000","size":"1000"},{"is_default":0,"text":"Original","size":"original"}],"type":"upload","guid":""},"migration":0,"upload":0,"enabled":0},"hasdefaultuserpic":0,"hasuserpics":0,"spamcount":0,"replycount":2,"comments_page":1,"scheme":"horizon","D":{},"activeuserpic":""};
                Site.timer = +(new Date());
                (function(){
                    var p = {"remote_is_identity":null,"remote_is_maintainer":0,"auth_token":"sessionless:1363852800:/__api/::b06e6196536ddb48f57d7db52ba0937aaa6c8d95","locale":"en_US","remoteUser":null,"remote_is_sup":0,"remoteJournalBase":null,"statprefix":"http://l-stat.livejournal.com","ctx_popup":1,"jsonrpcprefix":"http://l-api.livejournal.com","siteroot":"http://www.livejournal.com","country":"US","templates_update_time":900,"media_embed_enabled":1,"inbox_update_poll":0,"rpc":{"public":["sitemessage.get_message","comment.get_thread"]},"v":1363723174,"has_remote":0,"currentEntryRecommendations":0,"remoteLocale":"en_US","server_time":1363855720,"picsUploadDomain":"up.pics.livejournal.com","remote_is_suspended":0,"logprefix":"","imgprefix":"http://l-stat.livejournal.com/img","esn_async":1,"remote_can_track_threads":null,"currentJournal":"mvanier","pics_production":"","currentEntry":"http://mvanier.livejournal.com/4586.html","currentJournalBase":"http://mvanier.livejournal.com"}, i;
                    for (i in p) Site[i] = p[i];
                })();
                Site.current_journal = {"url_profile":"http://mvanier.livejournal.com/profile","url_journal":"http://mvanier.livejournal.com","is_identity":"","userid":14687195,"is_shared":"","display_name":"mvanier","is_comm":"","username":"mvanier","is_syndicated":"","can_receive_vgifts":1,"url_allpics":"http://www.livejournal.com/allpics.bml?user=mvanier","is_person":"1","url_message":"http://www.livejournal.com/inbox/compose.bml?user=mvanier","display_username":"mvanier"};
                Site.version = '102.1';
           </script>
<script type="text/javascript" src="http://l-stat.livejournal.com/js/??.ljlib.js?v=1363723174"></script>
<script type="text/javascript" src="http://l-stat.livejournal.com/js/??.comments.js?v=1363723174"></script>
<script type="text/javascript" src="http://l-stat.livejournal.com/js/??.b8aa?v=1363723174"></script>
<!--[if IE]><script type="text/javascript" src="http://l-stat.livejournal.com/js/??jquery/jquery.ie6multipleclass.min.js?v=1363723174"></script><![endif]-->
<!--[if lt IE 9]><script type="text/javascript" src="http://l-stat.livejournal.com/js/??lib/html5shiv.js?v=1363723174"></script><![endif]-->
<!--[if lte IE 9]><script type="text/javascript" src="http://l-stat.livejournal.com/js/??ie9pinned.js?v=1363723174"></script><![endif]-->
<script type="text/javascript">
LJShare.init({"ml":{"close":"Close","title":"Share"},"services":{"stumbleupon":{"bindLink":"http://www.livejournal.com/redirect/SHARING_stumbleupon?url=http%3A%2F%2Fwww.stumbleupon.com%2Fsubmit%3Furl%3D{url}","title":"StumbleUpon"},"moimir":{"bindLink":"http://www.livejournal.com/redirect/SHARING_moimir?url=http%3A%2F%2Fconnect.mail.ru%2Fshare%3Furl%3D{url}","title":"Moi mir"},"twitter":{"bindLink":"http://www.livejournal.com/redirect/SHARING_twitter?url=http%3A%2F%2Ftwitter.com%2Fshare%3Furl%3D{url}%26text%3D{title}","title":"Twitter"},"digg":{"bindLink":"http://www.livejournal.com/redirect/SHARING_digg?url=http%3A%2F%2Fdigg.com%2Fsubmit%3Furl%3D{url}","title":"Digg"},"email":{"bindLink":"http://www.livejournal.com/redirect/SHARING_email?url=http%3A%2F%2Fapi.addthis.com%2Foexchange%2F0.8%2Fforward%2Femail%2Foffer%3Fusername%3Dinternal%26url%3D{url}%26title%3D{title}","title":"E-mail"},"livejournal":{"bindLink":"http://www.livejournal.com/redirect/SHARING_livejournal?url=http%3A%2F%2Fwww.livejournal.com%2Fupdate.bml%3Frepost_type%3Dc%26repost%3D{url}","title":"LiveJournal"},"vkontakte":{"bindLink":"http://www.livejournal.com/redirect/SHARING_vkontakte?url=http%3A%2F%2Fvkontakte.ru%2Fshare.php%3Furl%3D{url}","title":"VKontakte"},"facebook":{"bindLink":"http://www.livejournal.com/redirect/SHARING_facebook?url=http%3A%2F%2Fwww.facebook.com%2Fsharer.php%3Fu%3D{url}","title":"Facebook"},"odnoklassniki":{"bindLink":"http://www.livejournal.com/redirect/SHARING_odnoklassniki?url=http%3A%2F%2Fwww.odnoklassniki.ru%2Fdk%3Fst.cmd%3DaddShare%26st.s%3D1%26st._surl%3D{url}","title":"Odnoklassniki"},"tumblr":{"bindLink":"http://www.livejournal.com/redirect/SHARING_tumblr?url=http%3A%2F%2Fwww.tumblr.com%2Fshare%3Fv%3D3%26u%3D{url}","title":"Tumblr"}},"links":["livejournal","facebook","twitter","digg","tumblr","stumbleupon","email"]})</script>
<script type="text/javascript">if (jQuery.VK) { jQuery.VK.init({apiId: 2244371, onlyWidgets: true})} </script> 
	<meta property="og:description" content="In the previous article I talked about the two fundamental monadic operations in the Monad type class: the bind operator ( &amp;gt;&amp;gt;= ) and the return function. In this article I&#39;ll complete the definition of the Monad type class and talk about monad laws. The full Monad type class Let&#39;s look at …" /><meta property="og:image" content="http://l-stat.livejournal.com/img/userinfo.gif?v=3" /><meta property="og:title" content="Yet Another Monad Tutorial (part 3: The Monad Laws)" /><meta property="og:type" content="website" /><meta property="og:url" content="http://mvanier.livejournal.com/4586.html" /><meta property="twitter:card" content="summary" /><meta property="twitter:site" content="@livejournal" /><link href='http://www.livejournal.com/go.bml?journal=mvanier&amp;itemid=4586&amp;dir=prev' rel='Previous' />
<link href='http://www.livejournal.com/go.bml?journal=mvanier&amp;itemid=4586&amp;dir=next' rel='Next' />
<noscript><meta http-equiv="refresh" content="0; url=http://mvanier.livejournal.com/4586.html?nojs=1" /></noscript><script>jQuery('noscript').last().remove()</script>

	

	<script type="text/javascript" src="http://l-stat.livejournal.com/tmpl/??Widgets/bubble.tmpl,Form/UpicSelect.tmpl,Widgets/photouploader/photouploader.tmpl,Widgets/photouploader/insertedItem.tmpl,Widgets/photouploader/uploadedItem.tmpl,Comments/Twig.tmpl?v=1363247955&tm=1515395;uselang=en_LJ"></script>
<script type="text/javascript" src="http://l-stat.livejournal.com/tmpl/??Widgets/contextualhover.jqtmpl?v=1343758569&tm=1515395;uselang=en_LJ"></script>

</head>
<body class="s-horizon p-footer-lite logged-out"  >
	

	<!-- Content Wrapper -->
	<div class="s-content-wrapper">

		

		

		<!-- Header -->
		<header class="s-header">
			
			
				<p class="s-header-logo">
					<a href="http://www.livejournal.com">
						LiveJournal
					</a>
				</p>
			

			

			

			


			<!-- Navbar -->
			<nav class="s-navbar s-show-local-menu" role="navigation">
					

				<ul class='s-navmenu'>
					
						<li class='s-navmenu-item horizon-menu-home'>
							<a class="s-navmenu-rootlink" href='http://www.livejournal.com/'><span>Home</span></a>

							
								
							
						</li>
					
						<li class='s-navmenu-item horizon-menu-create'>
							<a class="s-navmenu-rootlink" href='http://www.livejournal.com/create.bml'>Create an account</a>

							
								
							
						</li>
					
						<li class='s-navmenu-item horizon-menu-explore'>
							<a class="s-navmenu-rootlink" href='http://www.livejournal.com/search/'>Explore</a>

							
								
									<ul class='s-navmenu-submenu'>
									<li  ><a href='http://www.livejournal.com/interests.bml'>Search by Interest</a></li><li  ><a href='http://www.livejournal.com/schools/'>Search by School</a></li><li  ><a href='http://www.livejournal.com/ratings/'>Ratings</a></li><li  ><a href='http://www.livejournal.com/browse/'>Community Directory</a></li><li  ><a href='http://www.livejournal.com/syn/'>Feeds</a></li><li  ><a href='http://www.livejournal.com/radio/'>FRNK Radio</a></li>
									</ul>
								
							
						</li>
					
						<li class='s-navmenu-item horizon-menu-shop'>
							<a class="s-navmenu-rootlink" href='http://www.livejournal.com/shop/'>Shop</a>

							
								
									<ul class='s-navmenu-submenu'>
									<li  ><a href='http://www.livejournal.com/shop/vgift.bml'>Virtual Gifts</a></li><li  ><a href='http://www.livejournal.com/shop/theme/'>Themes</a></li><li  ><a href='http://www.livejournal.com/shop/userheads.bml'>Custom Userheads</a></li><li  ><a href='http://www.livejournal.com/shop/domain_ru.bml'>Domains RF</a></li><li  ><a href='http://www.zazzle.com/livejournal'>Merchandise</a></li>
									</ul>
								
							
						</li>
					
						<li class='s-navmenu-item horizon-menu-apps'>
							<a class="s-navmenu-rootlink" href='http://www.livejournal.com/extra/'>LJ Extras</a>

							
								
									<ul class='s-navmenu-submenu'>
									<li  ><a href='http://www.livejournal.com/devices'>Mobile</a></li><li  ><a href='http://www.livejournal.com/chat/'>LJ Talk</a></li><li  ><a href='http://www.livejournal.com/download/'>Downloads</a></li>
									</ul>
								
							
						</li>
					
				</ul>

				

			</nav>
			<!--/ Navbar -->

		</header>
		<!--/ Header -->

		
		<!-- Login -->
			<div class="lj_loginform s-login">
				<form method="post" action="https://www.livejournal.com/login.bml?ret=1" id="login" class="lj_login_form">
					
					<input type='hidden' name='mode' value='login'>
					
					<fieldset class="s-login-lj">
						<dl class="s-login-lj-username">
							<dt><label for='login_user'>Username</label></dt>
							<dd><input type="text" name="user" size="24" id='login_user' tabindex="1" placeholder="Username"></dd>
						</dl>
						<dl class="s-login-lj-password">
							<dt><label for='login_password'>Password</label></dt>
							<dd>
								<input type="password" id="login_password" name="password" size="15" class="lj_login_password" tabindex="2" placeholder="Password">
								<input type='submit' value="Log in" tabindex='3'>
							</dd>
						</dl>
						<dl class="s-login-lj-remember">
							<dt></dt>
							<dd><label><input type="checkbox" name="remember_me" value="1" tabindex="4" /> Remember Me</label></dd>
						</dl>
						<dl class="s-login-langs">
							<dt>Change language:</dt>
							<dd>
								<a href="http://www.livejournal.com/manage/settings/?cat=display">
									<ul>
										<li>English</li>
										<li>Español</li> 
										<li>Deutsch</li> 
										<li>Русский&hellip;</li>
									</ul>
								</a>
							</dd>
						</dl>					
					</fieldset>
					<fieldset class="s-login-options">
						<p class="s-login-option"><a href="http://www.livejournal.com/create.bml">Create an Account</a></p>
						<p class="s-login-option"><a href="http://www.livejournal.com/lostinfo.bml">Forgot your login or password?</a></p>
						<p class="s-login-more"><a href="http://www.livejournal.com/identity/login.bml?type=facebook" title="Facebook" class="i-auth"><img src="http://l-stat.livejournal.com/img/icons/facebook-16.gif?v=17127" width="16" height="16" alt="Facebook"></a>
						<a href="http://www.livejournal.com/identity/login.bml?type=twitter" title="Twitter" class="i-auth"><img src="http://l-stat.livejournal.com/img/icons/twitter-16.gif?v=18540" width="16" height="16" alt="Twitter"></a>
						<a href="#login-more" class="i-auth i-loginpopup-show"><img src="http://l-stat.livejournal.com/img/icons/showmore.gif?v=11430" width="16" height="16" alt="More login options" /></a></p>
						<div class="b-loginpopup" id="login-more">
							<ul class="b-loginpopup-items">
								<li class="b-loginpopup-item">
									<a href="http://www.livejournal.com/identity/login.bml?type=openid" title="OpenID"><img src="http://l-stat.livejournal.com/img/icons/openid-16.gif?v=17127" width="16" height="16" alt="OpenID" />OpenID</a>
								</li>
								<li class="b-loginpopup-item">
									<a href="http://www.livejournal.com/identity/login.bml?type=google" title="Google"><img src="http://l-stat.livejournal.com/img/icons/google-16.png?v=12457" width="16" height="16" alt="Google" />Google</a>
								</li>
								<li class="b-loginpopup-item">
									<a href="http://www.livejournal.com/identity/login.bml?type=mailru" title="Mail.Ru"><img src="http://l-stat.livejournal.com/img/icons/mailru-16.gif?v=11910" width="16" height="16" alt="Mail.Ru" />Mail.Ru</a>
								</li>
								<li class="b-loginpopup-item">
									<a href="http://www.livejournal.com/identity/login.bml?type=vkontakte" title="VKontakte"><img src="http://l-stat.livejournal.com/img/icons/vkontakte-16.gif?v=10284" width="16" height="16" alt="VKontakte" />VKontakte</a>
								</li>
							</ul>
						</div>
						<script type="text/javascript">
							jQuery('div.b-loginpopup').bubble({ target: jQuery('a.i-loginpopup-show'), closeControl: false, showOn: 'click' });
						</script>
					</fieldset>
				</form>
			</div>
		<!--/ Login -->
		

		

		<!-- Content -->
		<div class="s-content">

			

				

				

				

				

				

				

				

				<!-- Text Wrapper -->
				<div class='s-text-wrapper ' style='margin-right: px; height: 1%'>

					

					

					<div class="b-singlepost"> <div class="b-singlepost-about"> <dl class="b-singlepost-author"> <dt class="b-singlepost-author-userpic">  <img src="http://l-stat.livejournal.com/img/userpics/userpic-user.png?v=15821" alt="">  </dt> <dd class="b-singlepost-author-userinfo"> Mike Vanier (<span  class="ljuser  i-ljuser     "  lj:user="mvanier"><a href="http://mvanier.livejournal.com/profile" ><img width="16" height="16"  class="i-ljuser-userhead"  src="http://l-stat.livejournal.com/img/userinfo.gif?v=102.1" /></a><a href="http://mvanier.livejournal.com/" class="i-ljuser-username"   ><b>mvanier</b></a></span>) wrote,<br/> <span class="b-singlepost-author-date"><a href="http://mvanier.livejournal.com/2010/">2010</a>-<a href="http://mvanier.livejournal.com/2010/07/">07</a>-<a href="http://mvanier.livejournal.com/2010/07/25/">25</a> 19:16:00</span> </dd> </dl> <div class="b-singlepost-standout"> <ul class="b-linkbar">  <li class="b-linkbar-item"><a href="http://www.livejournal.com/go.bml?journal=mvanier&amp;itemid=4586&amp;dir=prev" rel="nofollow" title="Previous" class="b-controls b-controls-prev"><i class="b-controls-bg"></i>Previous</a></li>  <li class="b-linkbar-item"><a href="http://www.livejournal.com/tools/memadd.bml?journal=mvanier&amp;itemid=4586" rel="nofollow" title="Memorize" class="b-controls b-controls-memadd"><i class="b-controls-bg"></i>Memorize</a></li>  <li class="b-linkbar-item"><a href="#" rel="nofollow" title="Share" class="b-controls b-controls-share"><i class="b-controls-bg"></i>Share</a><script type="text/javascript">LJShare.link({"url":"http://mvanier.livejournal.com/4586.html","title":"Yet Another Monad Tutorial (part 3: The Monad Laws)"});</script></li>  <li class="b-linkbar-item"><a href="http://www.livejournal.com/go.bml?journal=mvanier&amp;itemid=4586&amp;dir=next" rel="nofollow" title="Next" class="b-controls b-controls-next"><i class="b-controls-bg"></i>Next</a></li>  </ul> </div> </div>    <div class="b-singlepost-wrapper">    <h1 class="b-singlepost-title">     Yet Another Monad Tutorial (part 3: The Monad Laws)  </h1>  <div class="b-singlepost-body"> <p>In the <a href="http://mvanier.livejournal.com/4305.html" rel="nofollow">previous article</a> I talked about the two fundamental monadic operations in
the <code>Monad</code> type class: the bind operator (<code>&gt;&gt;=</code>) and the <code>return</code> function.  In
this article I'll complete the definition of the <code>Monad</code> type class and talk
about monad laws.</p>

<p><a name="cutid1"></a></p>

<h2>The full <code>Monad</code> type class</h2>

<p>Let's look at the entire definition of the <code>Monad</code> constructor class:</p>

<pre><code>  class Monad m where
    (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b
    return :: a -&gt; m a
    (&gt;&gt;) :: m a -&gt; m b -&gt; m b
    fail :: String -&gt; m a
</code></pre>

<p>We see the familiar <code>&gt;&gt;=</code> operator and the <code>return</code> function, with the
expected types, but there is also one other operator called <code>&gt;&gt;</code> and one
other function called <code>fail</code>.  What do they mean?</p>

<p>The <code>fail</code> function is basically a very primitive kind of error reporting
function.  It is called when the <code>&gt;&gt;=</code> operator can't bind the value of type <code>a</code>
to the input of the function of type <code>a -&gt; m b</code> because of a pattern match
error.  I don't want to go into the details of this here because it's boring;
see the documentation on the 
<a href="http://www.haskell.org/ghc/docs/latest/html/libraries/index.html" rel="nofollow">Haskell web site</a> 
for more on this if you care.  Most of the time you don't need to concern
yourself with <code>fail</code>.</p>

<p>The <code>&gt;&gt;</code> operator is a bit more interesting.  It has the type:</p>

<pre><code>  (&gt;&gt;) :: m a -&gt; m b -&gt; m b
</code></pre>

<p>What this operator does is act as a monadic sequencing operator.  Specifically,
it's a version of monadic apply (<code>&gt;&gt;=</code> or "bind") which throws away the unpacked
value of type <code>a</code> before executing the "action" of type <code>m b</code>.  It's defined as
follows:</p>

<pre><code>  mv1 &gt;&gt; mv2  =  mv &gt;&gt;= (\_ -&gt; mv2)
</code></pre>

<p>From this we can see that whatever value is unpacked from the monadic value
<code>mv1</code>, it is discarded and then the final monadic value <code>mv2</code> is returned.  This
turns out to be useful when the unpacked value has type <code>()</code> <em>i.e.</em> the unit
type.  A good example is the <code>putStrLn</code> function:</p>

<pre><code>  putStrLn :: String -&gt; IO ()
</code></pre>

<p>Imagine if you wanted to print two strings, one after another, with newlines
at the end of each string.  You can write this as follows:</p>

<pre><code>  (putStrLn "This is string 1.") &gt;&gt; (putStrLn "This is string 2.")
</code></pre>

<p>It turns out that the <code>&gt;&gt;</code> operator has lower precedence than normal function
application (via juxtaposition of the arguments to the function), so we can
leave off the parentheses:</p>

<pre><code>  putStrLn "This is string 1." &gt;&gt; putStrLn "This is string 2."
</code></pre>

<p>Regardless, why does this work?  Let's look at the types:</p>

<pre><code>  (putStrLn "This is string 1.") :: IO ()
  (putStrLn "This is string 2.") :: IO ()
</code></pre>

<p>So what the <code>&gt;&gt;</code> operator is doing is combining two monadic values of type <code>IO
()</code> to generate one resulting monadic value of type <code>IO ()</code>.  Let's take the
<code>&gt;&gt;</code> operator and specialize it for this case:</p>

<pre><code>  (&gt;&gt;) :: m a -&gt; m b -&gt; m b
</code></pre>

<p>Here, <code>m</code> is <code>IO</code> and <code>a</code> and <code>b</code> are both <code>()</code>, so here,</p>

<pre><code>  (&gt;&gt;) :: IO () -&gt; IO () -&gt; IO ()
</code></pre>

<p>This makes it at least plausible that what <code>&gt;&gt;</code> is doing is to run the two
string printing "actions" one after another.</p>

<p>Here's a more complicated example.  We want to read a line of text from the
terminal and print it back out twice.  We can do it as follows:</p>

<pre><code> readAndPrintLineTwice :: IO ()
 readAndPrintLineTwice = getLine &gt;&gt;= (\s -&gt; (putStrLn s &gt;&gt; putStrLn s))
</code></pre>

<p>Because of operator precedences, we can write this without parentheses as:</p>

<pre><code> readAndPrintLineTwice :: IO ()
 readAndPrintLineTwice = getLine &gt;&gt;= \s -&gt; putStrLn s &gt;&gt; putStrLn s
</code></pre>

<p>Let's figure out what this means.  <code>getLine</code> is a monadic value ("action") which
reads a line of text from the terminal.  The <code>&gt;&gt;=</code> operator "unpacks" this line
of text from the monadic value and binds it to the name <code>s</code> (because <code>\s -&gt;
putStrLn s &gt;&gt; putStrLn s</code> is the monadic function that is the second argument to
<code>&gt;&gt;=</code>).  Then the string called <code>s</code> is used by the monadic value <code>putStrLn s &gt;&gt;
putStrLn s</code>, which prints out the string twice in sequence.</p>

<p>If this still seems mysterious to you, it's not your fault.  There is
something odd going on under the covers here, but I won't be able to explain
exactly what until I talk about state monads later.  But at least you should
be able to follow <em>what</em> is happening, even if you aren't clear on exactly
<em>how</em> it all happens.</p>

<p>Right now, I want to take a step back and look at monad laws, which have a big
impact on what the definitions of the <code>&gt;&gt;=</code> operator and the <code>return</code> function
are going to be for any given monad.  After this, we'll get back to more
practical matters.</p>

<h2>The Three Laws of Monadics</h2>

<p>Lots of important laws come in groups of three: Newton's three laws of
motion, the three laws of thermodynamics, Asimov's Three Laws of Robotics,
Kepler's three laws of planetary motion, etc. etc.  Monads are no different,
except that the "Three Laws of Monadics" are, of course, far more important than
the others ;-)</p>

<p>In order for the <code>&gt;&gt;=</code> operator and the <code>return</code> function to be a valid
definition of these operators/functions for a particular monad, they have to
have the correct types for that monad.  So, for instance, the definitions of
<code>&gt;&gt;=</code> and <code>return</code> for the <code>Maybe</code> monad will have the types:</p>

<pre><code>  (&gt;&gt;=) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b
  return :: a -&gt; Maybe a
</code></pre>

<p>and for the <code>IO</code> monad they would have the types:</p>

<pre><code>  (&gt;&gt;=) :: IO a -&gt; (a -&gt; IO b) -&gt; IO b
  return :: a -&gt; IO b
</code></pre>

<p>However, this isn't enough.  These operators/functions are also required to
satisfy three "monad laws".  The monad laws are actually very simple; they
simply guarantee that monadic function composition behaves in a reasonable
way.  I'll give you the "nice" version of the monad laws first and then show
you the (ugly) way in which they are usually described.  (You'll thank me
&mdash; the nice way is really much easier to understand.)</p>

<h3>The nice version</h3>

<p>Here is the nice definition of the three monad laws, in terms of monadic
function composition (recall that the <code>(&gt;=&gt;)</code> operator is the monadic
function composition operator):</p>

<pre><code>  1. return &gt;=&gt; f       ==    f
  2. f &gt;=&gt; return       ==    f
  3. (f &gt;=&gt; g) &gt;=&gt; h    ==    f &gt;=&gt; (g &gt;=&gt; h)
</code></pre>

<p>What do these laws tell us?</p>

<p>Laws 1 and 2 tell us what <code>return</code> is supposed to be: it's an identity for
monadic function composition (rule 1 says that <code>return</code> is a left identity,
and rule 2 says that <code>return</code> is a right identity).  In other words,
composing a monadic function <code>f</code> with <code>return</code> (on either side) just gives
you <code>f</code> back.  This is analogous to the fact that <code>0</code> is an identity under
addition of integers or <code>1</code> is an identity under multiplication of integers;
in each case, the identity element combined with an arbitrary value using the
appropriate operation just gives you the value back.</p>

<p>Law 3 tells us that monadic function composition is associative: when we want
to compose together three monadic functions (<code>f</code>, <code>g</code>, and <code>h</code>), it doesn't
matter which one we compose first.  This is analogous to the fact that
addition or multiplication are associative when applied to integers.</p>

<p>Why are these laws plausible?  Let's look at the corresponding "laws" that
regular function composition obeys:</p>

<pre><code>  1. id . f       ==  f
  2. f  . id      ==  f
  3. (f . g) . h  ==  f . (g . h)
</code></pre>

<p>where <code>id</code> is the identity function.  Notice the similarity? Composing a
function with the identity function on either the right or left side gives the
original function back, and function composition is associative.  Similarly,
monadic function composition should be associative, and <code>return</code> should be the
monadic equivalent of the identity function, in order for monadic function
composition to be as well-behaved as regular function composition.</p>

<p>What's the significance of these laws from the programmer's standpoint?  Since
we want our monads to behave in a sensible way, we want our definitions of
<code>return</code> and <code>&gt;&gt;=</code> for each monad to obey these laws.  This often can help us
figure out what the correct definitions of <code>return</code> and <code>&gt;&gt;=</code> have to be for a
given monad, and we'll see this later.  [Note that the monad laws as I've
defined them are in terms of the <code>&gt;=&gt;</code> operator and not the <code>&gt;&gt;=</code> operator, but
we'll see a version using the <code>&gt;&gt;=</code> operator below that is equivalent.]</p>

<p><em>However</em>, there is a catch: Haskell does <em>not</em> enforce the monad laws!  The
only thing Haskell cares about is that the definitions of <code>return</code> and <code>&gt;&gt;=</code> for
a particular monad have the correct types.  Whether they also obey the monad
laws or not is up to the programmer.</p>

<p>Many people have thus asked "Why <em>can't</em> Haskell enforce the monad laws?" And
the answer is simple: Haskell isn't powerful enough!  To get a programming
language and environment powerful enough to allow you to state and enforce monad
laws from within the language, you would need to have something like a theorem
prover.  Theorem provers are fascinating, and for all I know they may represent
the future of programming, but they are much more complicated than conventional
programming languages.  If you're interested in this, there is a well-respected
theorem prover called Coq, and it's available <a href="http://coq.inria.fr" rel="nofollow">here</a>.  But
in Haskell, it's up to the programmer who writes the definition of any
particular monad to make sure that the monad laws are upheld in that definition.</p>

<h3>The ugly version</h3>

<p>The problem with the nice version of the monad laws is that we don't define the
<code>&gt;=&gt;</code> operator directly when defining a monad as an instance of the <code>Monad</code> type
class; instead we define the <code>&gt;&gt;=</code> operator and then <code>&gt;=&gt;</code> follows from that as
I've shown above.  So if we want to constrain our definitions of <code>return</code> and
<code>&gt;&gt;=</code> for any particular monad, we should have a version of the monad laws that
only involve <code>return</code> and <code>&gt;&gt;=</code>.  And this is what most Haskell textbooks and
online documentation usually refer to when they discuss monad laws, even though
it's far less intuitive than the definitions I gave in the last section.</p>

<p>In terms of the <code>&gt;&gt;=</code> operator and the <code>return</code> function, the three monad laws
are:</p>

<pre><code>  1. return x &gt;&gt;= f    ==  f x
  2. mv &gt;&gt;= return     ==  mv
  3. (mv &gt;&gt;= f) &gt;&gt;= g  ==  mv &gt;&gt;= (\x -&gt; (f x &gt;&gt;= g))
</code></pre>

<p>where the types of the various values are:</p>

<pre><code>  mv :: m a
  f  :: a -&gt; m b
  g  :: b -&gt; m c
</code></pre>

<p>for some types <code>a</code>, <code>b</code>, and <code>c</code> and some monad <code>m</code>.</p>

<h3>Deriving the ugly version of the monad laws from the nice version</h3>

<p>For fun, let's see how we can take the nice version of the monad laws and
derive the ugly version from it.  We will use this definition in the
derivations:</p>

<pre><code>  f &gt;=&gt; g  =  \x -&gt; (f x &gt;&gt;= g)
</code></pre>

<p>which I discussed above.</p>

<p>Law 1:</p>

<pre><code>  return &gt;=&gt; f            ==    f
  \x -&gt; (return x &gt;&gt;= f)  ==    \x -&gt; f x
  return x &gt;&gt;= f          ==    f x           -- Q.E.D.
</code></pre>

<p>Note that <code>\x -&gt; f x</code> is identical to <code>f</code> as described above.</p>

<p>Law 2:</p>

<pre><code>  f &gt;=&gt; return            ==    f
  \x -&gt; (f x &gt;&gt;= return)  ==    \x -&gt; f x
  f x &gt;&gt;= return          ==    f x
  let mv == f x
  mv &gt;&gt;= return           ==    mv            -- Q.E.D.
</code></pre>

<p>Law 3:</p>

<pre><code>  (f &gt;=&gt; g) &gt;=&gt; h                 ==    f &gt;=&gt; (g &gt;=&gt; h)
  \x -&gt; ((f &gt;=&gt; g) x &gt;&gt;= h)       ==    \x -&gt; (f x &gt;&gt;= (g &gt;=&gt; h))
  (f &gt;=&gt; g) x &gt;&gt;= h               ==    f x &gt;&gt;= (g &gt;=&gt; h)
  (\y -&gt; (f y &gt;&gt;= g)) x &gt;&gt;= h     ==    f x &gt;&gt;= (\y -&gt; (g y &gt;&gt;= h))
  evaluate (\y -&gt; (f y &gt;&gt;= g)) x on LHS to: (f x &gt;&gt;= g)
  (f x &gt;&gt;= g) &gt;&gt;= h               ==    f x &gt;&gt;= (\y -&gt; (g y &gt;&gt;= h))
  let mv == f x
  (mv &gt;&gt;= g) &gt;&gt;= h                ==    mv &gt;&gt;= (\y -&gt; (g y &gt;&gt;= h))
  substitute f for g, g for h
  (mv &gt;&gt;= f) &gt;&gt;= g                ==    mv &gt;&gt;= (\y -&gt; (f y &gt;&gt;= g)) 
  substitute x for y in RHS
  (mv &gt;&gt;= f) &gt;&gt;= g                ==    mv &gt;&gt;= (\x -&gt; (f x &gt;&gt;= g))   -- Q.E.D.
</code></pre>

<p>The <code>evaluate (\y -&gt; ...) x</code> step just applies the <code>(\y -&gt; ...)</code> function to <code>x</code>
to get the result.  This works by substituting <code>x</code> for <code>y</code> in the body of <code>(\y
-&gt; ...)</code> (the body is the part marked <code>...</code>) to give the result.  In functional
programming lingo, this is called <em>beta-reduction</em>, which is the basic way
functions get evaluated.  The last step, where <code>x</code> is substituted for the bound
variable <code>y</code>, is correct in the same way that these two functions:</p>

<pre><code>  \x -&gt; f x
  \y -&gt; f y
</code></pre>

<p>are the same (the name of the formal argument is irrelevant).  In functional
programming lingo, we say that the two functions are <em>alpha-equivalent</em>.  The
other steps should be straightforward.</p>

<h3>What's the point?</h3>

<p>The monad laws can occasionally be useful when writing code; you can always take
the longer form of an expression and rewrite it as the shorter form (for
instance, replace all expressions of the form <code>return x &gt;&gt;= f</code> with just <code>f x</code>).
However, the main utility of monad laws is in deriving the definitions of
<code>return</code> and <code>&gt;&gt;=</code> for particular monads, which we'll see later in this series.</p>

<p>To wrap up this article, I want to show you a neat syntactic shorthand that can
make writing monadic code a whole lot more pleasant.</p>

<h2>The "do-notation"</h2>

<p>Recall the <code>readAndPrintLineTwice</code> function we defined above:</p>

<pre><code> readAndPrintLineTwice :: IO ()
 readAndPrintLineTwice = getLine &gt;&gt;= \s -&gt; putStrLn s &gt;&gt; putStrLn s
</code></pre>

<p>The good thing about this function is that it can be defined on a single line.
The bad thing is that it's not exactly the most readable line in the world.  The
Haskell language designers noticed that monadic definitions were often hard to
read and thought up a really nice bit of syntactic sugar to make these kinds of
definitions more readable.</p>

<p>The basis of this syntactic sugar is the observation that a large number of
operations in monadic code have one of the following two forms:</p>

<pre><code>  -- Form 1.
  -- mv :: m a
  -- f  :: a -&gt; m b

  mv &gt;&gt;= \x -&gt; mf x

  -- Form 2.
  -- mv  :: m a
  -- mv2 :: m b

  mv &gt;&gt; mv2
</code></pre>

<p>Therefore, a notation was figured out that made both of these forms very
readable.  It starts with the keyword <code>do</code> followed by some monadic
operations.  Here are our two examples in the <code>do</code> notation:</p>

<pre><code>  -- Form 1, do-notation.

  do v &lt;- mv
     f v

  -- Form 2, do-notation.

  do mv
     mv2
</code></pre>

<p>In form 1, the first line says that we take the monadic value <code>mv</code> and "unpack"
it into a regular value called <code>v</code>.  The second line just says that we then
compute <code>f v</code>.  The result of <code>f v</code> is the result of the entire expression.</p>

<p>In form 2, the first line says that we "perform" the monadic value ("action")
<code>mv</code>.  The second line says that we "perform" the monadic value ("action")
<code>mv2</code>.  So this is just a notation to describe the sequencing of <code>mv</code> and <code>mv2</code>
using the <code>&gt;&gt;</code> operator.</p>

<p>What the Haskell compiler does is convert the <code>do</code>-notation versions of Form
1 and Form 2 into the versions without <code>do</code>.  This is just a syntactic
transformation, and the meaning is identical.  Furthermore, you can mix the
two forms, and have multiple forms of each types.  For instance:</p>

<pre><code>  -- mv  :: m a
  -- v1  :: a
  -- f   :: a -&gt; m b
  -- v2  :: b
  -- mv3 :: m c

  do v1 &lt;- mv
     v2 &lt;- f v1
     mv3
     return v2
</code></pre>

<p>This means exactly the same thing as:</p>

<pre><code>  mv &gt;&gt;= (\v1 -&gt;
    (f v1 &gt;&gt;= (\v2 -&gt;
       (mv3 &gt;&gt; 
          (return v2)))))
</code></pre>

<p>Or, without the parentheses, as:</p>

<pre><code>  mv &gt;&gt;= \v1 -&gt;
    f v1 &gt;&gt;= \v2 -&gt;
      mv3 &gt;&gt; return v2
</code></pre>

<p>You can imagine that as the monadic expressions get larger, the <code>do</code> form
will continue to be easy to read, while the form without <code>do</code> (called the
"desugared" form) will often be very hard to read.  That's why this notation
exists.  What's cool is that this notation works for <em>all</em> monads, not just
for any particular one.</p>

<p>You're also allowed to mix <code>do</code>-notation with the desugared notation, like
this:</p>

<pre><code>  do v1 &lt;- mv
     v2 &lt;- f v1
     mv3 &gt;&gt; return v2
</code></pre>

<p>Sometimes this is useful, but it can also often lead to ugly hard-to-read code.</p>

<p>Let's look at what our earlier examples would look like with the
<code>do</code>-notation.</p>

<pre><code>  -- Read a line, then print it.
  readAndPrintLine :: IO ()
  readAndPrintLine =
    do line &lt;- getLine 
       putStrLn line

  -- Print two lines, one after another.
  -- Not a function.
  do putStrLn "This is string 1."
     putStrLn "This is string 2."

  -- Read a line and print it twice.
  readAndPrintLineTwice :: IO ()
  readAndPrintLineTwice =
    do line &lt;- getLine
       putStrLn line
       putStrLn line
</code></pre>

<p>In all three cases, the <code>do</code>-notation makes the code significantly easier to
read.  Interestingly, it has the added benefit (or drawback, depending on your
perspective) of making Haskell code look like imperative code!  If we read a
<code>do</code>-expression top to bottom, it looks like it was written in an imperative
language that uses <code>&lt;-</code> as an assignment statement.  For instance,
<code>readAndPrintLine</code> can be described as: "use <code>getLine</code> to read a line, which you
put into the variable <code>line</code>; then use <code>putStrLn</code> to print out that variable."
This is emphatically <em>not</em> what's actually happening (for instance, <code>line</code> is
not a variable), but you can read the code as if it is.  When you're dealing
with code that does a lot of input and output, it can be very convenient to be
able to write it this way.</p>

<p>The <code>do</code>-notation includes other features as well.  For instance, you can
incorporate <code>let</code> statements and <code>case</code> statements into the body of a <code>do</code>
expression, and this is often handy.  I won't go into this here, though,
because it's pretty routine &mdash; see any Haskell tutorial for more
details.</p>

<h2>Next time</h2>

<p>In the <a href="http://mvanier.livejournal.com/4647.html" rel="nofollow">next installment</a> I'll start deriving monads, starting with the <code>Maybe</code>
monad (for computations that can fail) and continuing with the list monad (for
computations that can return multiple results).</p> </div>  </div>   <div  id="comments"  class=" b-grove b-grove-hover  ljtimes-disabled  b-grove-3comments    lj-widget" data-authtoken="c0:1363852800:2920:86400:50svesx9Ak-0-:d93212a8713f2124db90a0ba6f371da8" data-widget="comments"> <div class="b-xylem b-xylem-first"> <ul class="b-xylem-cells">  <li class="b-xylem-cell b-xylem-cell-add">  <a class="b-addcomment" href="http://mvanier.livejournal.com/4586.html?mode=reply#add_comment"><span class="b-addcomment-inner"><i class="b-addcomment-icon"></i>Post a new comment</span></a>   <div class=" b-watering  b-watering-trueauth-anonymous b-watering-realauth-anonymous b-watering-authtype-anonymous     b-watering-user-notafriend b-watering-user-regonly   b-watering-user-logips b-watering-user-logips-anon  b-watering-user-screened b-watering-user-screened-all     b-watering-captcha-all  "> <form action="http://www.livejournal.com/talkpost_do.bml" method="post" id="postform"> <div class="b-watering-wrapper"> <input type='hidden' name="journal" value="mvanier" /> <input type='hidden' name="itemid" value="4586" /> <input type='hidden' name="response" value="" /> <input type='hidden' name="lj_form_auth" value="c0:1363852800:2920:86400:50svesx9Ak-0-:d93212a8713f2124db90a0ba6f371da8" id="lj_form_auth" /> <input type='hidden' name="chrp1" value="4586-14687195-1363852800-I2yJSMoFl0BaV2W1bQAG-a80b9c105ba44a1fcd0fdd52087a116e" /> <input type='hidden' name="chal" value="c0:1363852800:2920:900:2i2Ljlucj4idIX25vjvi:0209cb0d75362f113e765c2abebcef2c" /> <input type='hidden' name="cookieuser" value="" /> <input type='hidden' name="replyto" value="0" id="replyto" /> <input type='hidden' name="parenttalkid" value="0" id="parenttalkid" /> <input type='hidden' name="editid" value="0" /> <input type='hidden' name="json" value="0" /> <input type='hidden' name="talkpost_do" value="0" /> <input type='hidden' name="subject" /> <input type='hidden' name="stylemine" value="0" /> <input type='hidden' name="viewing_thread" value="" id="viewing_thread" /> <div class="b-msgsystem-errorbox"> <h4 class="b-msgsystem-errorbox-head">Error</h4> <p class="b-msgsystem-error b-msgsystem-error-ajax"></p>          <p class="b-msgsystem-error b-msgsystem-error-regonly">Anonymous comments are disabled in this journal</p>   </div> <div class="b-watering-outer"> <div class="b-watering-fields"> <div class="b-watering-inner"> <div class="b-watering-user"> <div class="b-watering-user-login"> <ul class="b-watering-user-login-items">   <li class="b-watering-user-login-item b-watering-user-login-user">  <input name="usertype" value="user"  id="user" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>  <span class="b-watering-user-login-details"> <input placeholder="Username" name="userpost" type="text" tabindex="25" autocomplete="off" class="auth-input"> <input placeholder="Password" name="password" type="password" tabindex="25" autocomplete="off" class="auth-input"> </span>  </li>    <li class="b-watering-user-login-item b-watering-user-login-facebook">  <input name="usertype" value="facebook"  id="facebook" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  We will log you in after post  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-twitter">  <input name="usertype" value="twitter"  id="twitter" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  We will log you in after post  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-openid">  <input name="usertype" value="openid"  id="openid" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  <input id="openid" name="openid:url" placeholder="openid" type="text"  tabindex="25" autocomplete="off" class="auth-input">  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-google">  <input name="usertype" value="google"  id="google" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  We will log you in after post  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-mailru">  <input name="usertype" value="mailru"  id="mailru" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  We will log you in after post  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-vkontakte">  <input name="usertype" value="vkontakte"  id="vkontakte" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  We will log you in after post  </span>   </li>    <li class="b-watering-user-login-item b-watering-user-login-anonymous">  <input name="usertype" value="anonymous" checked id="anonymous" class="b-watering-user-login-checkbox" type="radio">  <i class="b-watering-user-login-pic"></i>   <span class="b-watering-user-login-details">  Anonymously  </span>   </li>   </ul> </div> <div class="b-watering-user-options">  <a href="javascript:void(0);" class="b-watering-user-change b-pseudo" tabindex="10">switch</a>  <div class="b-watering-user-services"> <ul class="b-watering-user-services-items">  <li class="b-watering-user-services-item b-watering-user-services-user"> <a href="#user" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">LiveJournal</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-facebook"> <a href="#facebook" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">Facebook</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-twitter"> <a href="#twitter" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">Twitter</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-openid"> <a href="#openid" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">OpenId</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-google"> <a href="#google" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">Google</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-mailru"> <a href="#mailru" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">MailRu</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-vkontakte"> <a href="#vkontakte" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">VKontakte</span> </a> </li>  <li class="b-watering-user-services-item b-watering-user-services-anonymous"> <a href="#anonymous" tabindex="20"><i class="b-watering-user-services-pic"></i><span class="b-watering-user-services-name">Anonymously</span> </a> </li>  </ul> </div>   </div> </div> <div class="  b-ljuserpic   b-ljuserpic-nopics  ">  <input type="hidden" name="prop_picture_keyword" id="prop_picture_keyword" value="">  <span class="b-ljuserpic-default">default userpic</span> <div class=" b-myuserpic  b-myuserpic-anonymous "> <a href="javascript:void(0);" class="b-myuserpic-current"  data-nodefpic="url(http://l-stat.livejournal.com/img/userpics/userpic-user.png?v=15821)" data-nodeflabel="default userpic"  style="background-image: url(  http://l-stat.livejournal.com/img/userpics/userpic-anonymous.png?v=15821  );" tabindex="30"></a>  </div> </div> <div class=" b-updateform lj-widget " data-widget="commentsFormToolbar" > <div class="b-updateform-bar"> <ul class="b-updateform-buttons b-updateform-buttons-firstsection">   <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-bold" title="Insert Bold" tabindex="151" data-type="bold" data-role="style"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Bold</span> </a> </li>    <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-italic" title="Insert Italic" tabindex="151" data-type="italic" data-role="style"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Italic</span> </a> </li>    <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-underline" title="Insert Underline" tabindex="151" data-type="underline" data-role="style"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Underline</span> </a> </li>    <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-strikethrough" title="Insert Strikethrough" tabindex="151" data-type="strikethrough" data-role="style"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Strikethrough</span> </a> </li>             </ul> <ul class="b-updateform-buttons b-updateform-buttons-secondsection">           <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-link" title="Insert Link" tabindex="151" data-type="link" data-role="bubble"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Link</span> </a> </li>    <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-user" title="Insert LJ User" tabindex="151" data-type="user" data-role="bubble"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert LJ User</span> </a> </li>         </ul> <ul class="b-updateform-buttons b-updateform-buttons-thirdsection">               <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-photo" title="Insert Photo" tabindex="151" data-type="photo" data-role="photouploader"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Photo</span> </a> </li>    <li class="b-updateform-buttons-item"> <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-video" title="Insert Video" tabindex="151" data-type="video" data-role="bubble"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Insert Video</span> </a> </li>     </ul> <ul class="b-updateform-buttons b-updateform-buttons-aside">                   <li class="b-updateform-buttons-item">  <a href="javascript:void(0);" class="b-updateform-button b-updateform-button-spell" title="Spell check" tabindex="151" data-type="spell" data-role="spell"> <i class="b-updateform-button-pic"></i> <span class="b-updateform-button-title b-pseudo">Spell check</span> </a>  </li>   </ul> </div> <textarea  name="body" id="body" cols="60" rows="10" class="b-updateform-textarea" tabindex="50" autocomplete="off"></textarea> </div> <div class="b-watering-msgbox">    <p class="b-msgsystem-error b-msgsystem-error-screened">Your reply will be screened</p>    <p class="b-msgsystem-error b-msgsystem-error-logcommentips"> Your IP address will be recorded &nbsp; <a href="http://www.livejournal.com/support/faq/66.html" class="b-watering-help-link" target="_blank"><i class="b-watering-help-icon"></i></a> </p>  </div>  <div class="b-watering-captchabox b-watering-captchabox-active" id="captcha-container">  <script type="text/javascript">
//<![CDATA[
var RecaptchaOptions = {"lang":"en_LJ","theme":"clean"};
//]]>
</script>
<script src="http://www.google.com/recaptcha/api/challenge?k=6LegWAEAAAAAANJcmtbLTuHlG7AbDzLPxvimCw_Z" type="text/javascript"></script>
<noscript><iframe frameborder="0" height="300" src="http://www.google.com/recaptcha/api/noscript?k=6LegWAEAAAAAANJcmtbLTuHlG7AbDzLPxvimCw_Z" width="500"></iframe><textarea cols="40" name="recaptcha_challenge_field" rows="3"></textarea><input name="recaptcha_response_field" type="hidden" value="manual_challenge" /></noscript>
  </div> <div class="b-watering-submit"> <div class="b-ljbutton b-ljbutton-submit"> <button type="submit" name="submitpost" tabindex="80">Post a new comment</button> </div> </div> </div> </div> <div class="b-watering-aside"> <div class="b-watering-help"> <a href="http://www.livejournal.com/support/faq/46.html" class="b-watering-help-link" target="_blank"><i class="b-watering-help-icon"></i>Help</a> </div> </div> </div> </div> <script id="tmpl-updateform-link" type="text/html"> <i class="b-updateform-bubble-bg"></i> <div class="b-updateform-bubble-wrapper b-updateform-bubble-link-empty"> <div class="b-updateform-bubble-link-fields"><label for="updateform-link-url">Link</label><br><input type="text" id="updateform-link-url" size="50" value="" class="b-updateform-bubble-input"><br><span class="b-updateform-bubble-option"><input type="checkbox" id="updateform-link-target" class="b-updateform-bubble-checkbox" tabindex="50" checked disabled><label for="updateform-link-target" class="b-updateform-bubble-option-label">open in new window</label></span></div> <div class="b-updateform-bubble-link-button"><div class="b-ljbutton b-ljbutton-delete b-updateform-bubble-link-button-remove"><button name="removelinks" type="button">Remove all links in selection</button></div><div class="b-ljbutton b-ljbutton-submit b-ljbutton-disabled"><button name="submitpost" type="button" disabled="disabled">Insert</button></div></div> </div> </script> <script id="tmpl-updateform-photo" type="text/html"> <i class="b-updateform-bubble-bg"></i> <div class="b-updateform-bubble-wrapper"> <div class="b-updateform-bubble-photo-pic"><span class="b-updateform-bubble-photo-inner"><img src="http://l-stat.livejournal.com/img/spacer.gif?v=13339" alt="" class="b-updateform-bubble-photo-preview"></span></div> <div class="b-updateform-bubble-photo-fields"><label for="updateform-bubble-photo-url">Photo</label><br><input type="text" id="updateform-photo-url" size="50" value="" class="b-updateform-bubble-input"><br><span class="b-updateform-bubble-hint">Hint&nbsp;<span class="b-pseudo b-updateform-bubble-example">http://pics.livejournal.com/igrick/pic/000r1edq</span></span></div> <div class="b-updateform-bubble-photo-button"><div class="b-ljbutton b-ljbutton-submit b-ljbutton-disabled"><button name="submitpost" type="button" disabled="disabled">Insert</button></div></div> </div> </script> <script id="tmpl-updateform-video" type="text/html"> <i class="b-updateform-bubble-bg"></i> <div class="b-updateform-bubble-wrapper"> <div class="b-updateform-bubble-video-fields"><label for="updateform-video-url">Video</label><br><textarea rows="5" cols="60" id="updateform-video-url" class="b-updateform-bubble-input" ></textarea><span class="b-updateform-bubble-hint" data-hint-target="#updateform-video-url">Embed, iframe, <a href="http://www.youtube.com/watch?v=-LMebrVm-uU" target="_blank">youtube</a> or <a href="http://vimeo.com/59545564" target="_blank">vimeo</a></span></div> <div class="b-updateform-bubble-video-button"><div class="b-ljbutton b-ljbutton-submit b-ljbutton-disabled"><button name="submitpost" type="button" disabled="disabled">Insert</button></div></div> </div> </script> <script id="tmpl-updateform-user" type="text/html"> <i class="b-updateform-bubble-bg"></i> <div class="b-updateform-bubble-wrapper"> <div class="b-updateform-bubble-user-fields"><label for="updateform-bubble-user-name">User</label><br><span class="b-updateform-bubble-input-wrapper b-updateform-bubble-input-username"><input type="text" id="updateform-bubble-user-name" size="30" maxlength="15" value="" class="b-updateform-bubble-input"><i class="b-updateform-bubble-input-pic"></i></span><span class="b-updateform-bubble-hint">Example:&nbsp;<span class="b-pseudo b-updateform-bubble-example">igrick</span></span><span class="b-updateform-bubble-warning b-bubble b-bubble-warning b-bubble-intext">No such user</span><span class="b-updateform-bubble-input-title"><label for="updateform-bubble-user-title">User title (optional)</label><br><input type="text" id="updateform-bubble-user-title" size="30" maxlength="255" value="" class="b-updateform-bubble-input"></span></div> <div class="b-updateform-bubble-user-button"><div class="b-ljbutton b-ljbutton-submit b-ljbutton-disabled"><button name="submitpost" type="button" disabled="disabled">Insert user</button></div></div> </div> </script> </form> <script type="text/javascript"> jQuery('#body').spellchecker() .spellchecker('option', 'minHeight', 180) .spellchecker('subscribe') .spellchecker('start'); </script> <i class="b-watering-close"></i> <i class="b-watering-arrows"> <i class="b-watering-arrow-border"></i> <i class="b-watering-arrow"></i> </i> </div> <script> (function() { var node = jQuery('.b-watering'); node.commentator({ publicKey: '6LegWAEAAAAAANJcmtbLTuHlG7AbDzLPxvimCw_Z', captchaContainerId: 'captcha-container', selectors: { errorBlock: '.b-msgsystem-error-ajax', blockingErrorBlocks: '.b-msgsystem-error', preloaderElem: '.b-watering-preload', submitControl: '.b-ljbutton-submit', captchaBox: '.b-watering-captchabox' }, classNames: { captchaActive: 'b-watering-captchabox-active', replyPage: 'b-watering-replypage' } }) .commentform();  node.authtype({ forceStartupCaptcha: !!(Number('1')), classNames: { expanded: 'b-watering-user-options-show', startAuthTypePrefix: 'b-watering-trueauth-', captchaForAnonymous: 'b-watering-captcha-anon', captchaForNonFriends: 'b-watering-captcha-nonfriend', notfriend: 'b-watering-user-notafriend', notaspammer: 'b-watering-notaspammer', captchaForAll: 'b-watering-captcha-all', authTypePrefix: 'b-watering-authtype-' }, selectors: { activeSelectItem: 'a[href=#{authType}]', selectControl: '.b-watering-user-options', authTypesControls: '.b-watering-user-services-item a', authTypeRadios: '.b-watering-user-login-{authType} .b-watering-user-login-checkbox' } }); }()); </script>  </li>  <li class="b-xylem-cell b-xylem-cell-amount">    2 comments    </li>  </ul>  </div>      <div class="b-tree b-tree-root"> </div> <script id="comments_json" type="text/plain"> [{"userpic":null,"uname":"","loaded":1,"statprefix":"http://l-stat.livejournal.com","talkid":204,"controls":null,"siteroot":"http://www.livejournal.com","ipaddr":null,"parent":0,"subject":"Suggestion","username":null,"thread":52458,"level":1,"dname":"","shown":1,"collapsed":0,"actions":[{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?replyto=52458","name":"reply","title":"Reply","footer":1},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52458#t52458","name":"permalink","title":"link"},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52458#t52458","name":"collapse","title":"Collapse"},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52458#t52458","name":"expand","title":"Expand"}],"p_tracked":0,"dtalkid":52458,"etime_ts":null,"above":null,"upictitle":null,"article":"Sticking with the \"repetition pedagogy\", I would remind the reader of \"&gt;&gt;=\" being kind of a pipe \"|\" as in linux' shell, which I assume every reader knows. I personally had to recall this each time I read the symbol \"&gt;&gt;=\" since it's not a really intuitive symbol to me.","stime":"1 year ago","ctime":"May 5 2011, 08:06:22 UTC","deleted_poster":null,"below":null,"massactions":null,"deleted":0,"etime":null,"ctime_ts":"1304582782","subclass":null,"suspended":null,"leafclass":null,"margin":0,"tracked":0},{"userpic":null,"uname":"mvanier","loaded":1,"statprefix":"http://l-stat.livejournal.com","talkid":205,"controls":null,"siteroot":"http://www.livejournal.com","ipaddr":null,"parent":52458,"subject":"Re: Suggestion","username":[{"attrs":null,"inline_css":0,"journal_url":"http://mvanier.livejournal.com/","is_identity":0,"bold":1,"striked":null,"userhead_url":"http://l-stat.livejournal.com/img/userinfo.gif?v=102.1","username":"mvanier","color":null,"user_alias":null,"noctxpopup":0,"profile_url":"http://mvanier.livejournal.com/profile","alias":0,"side_alias":0,"journal":"mvanier"}],"thread":52714,"level":2,"dname":"mvanier","shown":1,"collapsed":0,"actions":[{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?replyto=52714","name":"reply","title":"Reply","footer":1},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52714#t52714","name":"permalink","title":"link"},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52714#t52714","name":"collapse","title":"Collapse"},{"allowed":1,"href":"http://mvanier.livejournal.com/4586.html?thread=52714#t52714","name":"expand","title":"Expand"}],"p_tracked":0,"dtalkid":52714,"etime_ts":null,"above":52458,"upictitle":"Mike Vanier: pic#0","article":"This is a good point and when I discuss this operator in class I mention Unix pipes.  Since you've just mentioned it for me, you've saved me the trouble! ;-)","stime":"1 year ago","ctime":"May 5 2011, 08:08:55 UTC","deleted_poster":null,"below":null,"massactions":null,"deleted":0,"etime":null,"ctime_ts":"1304582935","subclass":null,"suspended":null,"leafclass":null,"margin":30,"tracked":0}] </script>  <div class="b-xylem"> <ul class="b-xylem-cells">  <li class="b-xylem-cell b-xylem-cell-add"> <a class="b-addcomment" href="http://mvanier.livejournal.com/4586.html?mode=reply#add_comment"><span class="b-addcomment-inner"><i class="b-addcomment-icon"></i>Post a new comment</span></a> </li>  <li class="b-xylem-cell b-xylem-cell-amount">    2 comments    </li>  </ul>  </div>     </div>  </div>
					<div class='clear'></div>

				</div>
				<!--/ Text Wrapper -->

				

			

		</div>
		<!--/ Content -->

		

	</div>
	<!--/ Content Wrapper -->







	
		<footer class="s-footer s-footer-lite">
			<div class="s-footer-nav-inner">
				<div class="s-footer-copyright">Copyright &copy; 1999 LiveJournal, Inc.  All rights reserved.</div>
			</div>	
		</footer>
		
	

	<div id='hello-world' style='text-align: left; font-size:0; line-height:0; height:0; overflow:hidden;'>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-24823174-1']);
  _gaq.push(['_setDomainName', '.livejournal.com']);
  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

<!-- tns-counter.ru --> 
<script language="JavaScript" type="text/javascript"> 
var img = new Image();
img.src = 'http://www.tns-counter.ru/V13a***R>' + document.referrer.replace(/*/g,'%2a') + '*sup_ru/ru/UTF-8/tmsec=lj_noncyr/' + Math.round(Math.random() * 1000000000);
</script> 
<noscript> 
<img src="http://www.tns-counter.ru/V13a****sup_ru/ru/UTF-8/tmsec=lj_noncyr/" width="1" height="1" alt="">
</noscript>
<!--/ tns-counter.ru -->
<!-- Begin comScore Tag 1.1111.15 -->
<script type="text/javascript">
// <![CDATA[
function udm_(a){var b="comScore=",c=document,d=c.cookie,e="",f="indexOf",g="substring",h="length",i=2048,j,k="&ns_",l="&",m,n,o,p,q=window,r=q.encodeURIComponent||escape;if(d[f](b)+1)for(o=0,n=d.split(";"),p=n[h];o<p;o++)m=n[o][f](b),m+1&&(e=l+unescape(n[o][g](m+b[h])));a+=k+"_t="+ +(new Date)+k+"c="+(c.characterSet||c.defaultCharset||"")+"&c8="+r(c.title)+e+"&c7="+r(c.URL)+"&c9="+r(c.referrer),a[h]>i&&a[f](l)>0&&(j=a[g](0,i-8).lastIndexOf(l),a=(a[g](0,j)+k+"cut="+r(a[g](j+1)))[g](0,i)),c.images?(m=new Image,q.ns_p||(ns_p=m),m.src=a):c.write("<","p","><",'img src="',a,'" height="1" width="1" alt="*"',"><","/p",">")}
udm_('http'+(document.location.href.charAt(4)=='s'?'s://sb':'://b')+'.scorecardresearch.com/b?c1=2&c2=7602110&sm_vd_cyrillic_status=nonCyr&sm_vd_view_own_journal=undef&sm_vd_id=undef&sm_vd_login_status=logout&sm_vd_account_level=undef&sm_vd_premium_package=undef&sm_vd_early_adopter=undef&sm_vd_log_in_service=undef&sm_vd_viewing_scheme=horizon&sm_vd_view_in_my_style=undef&sm_pd_visited_journal_account_type=personal&sm_pd_visited_journal_log_in_service=lj&sm_pd_ads_onpage=0&sm_pd_ad_eligible=no&sm_pd_adult_content=none&sm_pd_comments_style=undef&sm_pd_error_pages=undef&sm_pd_visited_journal_name=mvanier&sm_pd_page_type=journal&sm_pd_style_layout=undef&sm_pd_style_design=undef&sm_pd_style_system=undef&sm_pd_visited_journal_account_level=basic&sm_pd_early_adopter=no&sm_pd_visited_journal_premium_package=no&sm_pd_page_group=PostMainPage');
// ]]>
</script>
<noscript><p><img src="http://b.scorecardresearch.com/p?c1=2&c2=7602110&sm_vd_cyrillic_status=nonCyr&sm_vd_view_own_journal=undef&sm_vd_id=undef&sm_vd_login_status=logout&sm_vd_account_level=undef&sm_vd_premium_package=undef&sm_vd_early_adopter=undef&sm_vd_log_in_service=undef&sm_vd_viewing_scheme=horizon&sm_vd_view_in_my_style=undef&sm_pd_visited_journal_account_type=personal&sm_pd_visited_journal_log_in_service=lj&sm_pd_ads_onpage=0&sm_pd_ad_eligible=no&sm_pd_adult_content=none&sm_pd_comments_style=undef&sm_pd_error_pages=undef&sm_pd_visited_journal_name=mvanier&sm_pd_page_type=journal&sm_pd_style_layout=undef&sm_pd_style_design=undef&sm_pd_style_system=undef&sm_pd_visited_journal_account_level=basic&sm_pd_early_adopter=no&sm_pd_visited_journal_premium_package=no&sm_pd_page_group=PostMainPage" height="1" width="1" alt="*"></p></noscript>
<script type="text/javascript" language="JavaScript1.3" src="http://b.scorecardresearch.com/c2/7602110/cs.js"></script>
<!-- End comScore Tag --><!-- Quantcast Tag -->
<script type="text/javascript">
var _qevents = _qevents || [];

(function() {
var elem = document.createElement('script');
elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
elem.async = true;
elem.type = "text/javascript";
var scpt = document.getElementsByTagName('script')[0];
scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
qacct:"p-2945K0QbJw0BA"
});
</script>

<noscript>
<div style="display:none;">
<img src="//pixel.quantserve.com/pixel/p-2945K0QbJw0BA.gif" border="0" height="1" width="1" alt="Quantcast"/>
</div>
</noscript>
<!-- End Quantcast tag -->
<!-- LiveJournal COUNTER -->
<img src="http://xc3.services.livejournal.com/ljcounter?d=srv:bil1-ws26,r:0,j:14687195,uri:%22%2F4586.html%22,vig:0,extra:AOAb2wDgG9sAABHq" alt="" />
<!-- /COUNTER -->
</div>
	
	<script type="application/javascript">var _prum={id:"50e69c3994fe9c2c10000003"};var PRUM_EPISODES=PRUM_EPISODES||{};PRUM_EPISODES.q=[];PRUM_EPISODES.mark=function(b,a){PRUM_EPISODES.q.push(["mark",b,a||new Date().getTime()])};PRUM_EPISODES.measure=function(b,a,b){PRUM_EPISODES.q.push(["measure",b,a,b||new Date().getTime()])};PRUM_EPISODES.done=function(a){PRUM_EPISODES.q.push(["done",a])};PRUM_EPISODES.mark("firstbyte");(function(){var b=document.getElementsByTagName("script")[0];var a=document.createElement("script");a.type="text/javascript";a.async=true;a.charset="UTF-8";a.src="//rum-static.pingdom.net/prum.min.js";b.parentNode.insertBefore(a,b)})();</script>
<script type="text/javascript">LiveJournal.injectScript('http://apis.google.com/js/plusone.js',{text:"{lang: 'en'}"});</script><div id="fb-root"></div>
        <script type="text/javascript">
          window.fbAsyncInit = function() {
            FB.init({appId: '214181831945836', xfbml: true});
          };

          LiveJournal.injectScript(document.location.protocol + '//connect.facebook.net/en_US/all.js', null, document.getElementById('fb-root'))
        </script>
    <script type="text/javascript">LiveJournal.injectScript('http://surfingbird.ru/share/share.min.js');</script> <script type="text/javascript">LiveJournal.injectScript('http://platform.twitter.com/widgets.js');</script>

</body>

</html>
